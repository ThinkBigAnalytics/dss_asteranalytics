{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "PointInPolygon",
  "function_version": "1.3",
  "function_type": "non-driver",
  "function_r_name": "aa.pointin.polygon",
  "short_description": "This function is adopted to judge whether a given point in the plane lies inside or outside the boundary of a polygon. ",
  "long_description": "This function takes as input a list of location points and a list of polygons.It will return a list of binary values for every point and polygon combination that indicate whether the point is contained in the polygon.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByAny",
        "Dimension",
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "source",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The input table contains the source geometry information",
      "description": "The input table contains the source geometry information",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "source.data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [
        "PartitionByAny",
        "Dimension",
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "reference",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The input table contains the reference geometry information",
      "description": "The input table contains the reference geometry information",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "reference.data",
      "useInR": true,
      "rOrderNum": 2
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "source"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SourceLocationColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The names of the columns that contain the point coordinate values from the source input table. If only one column is specified, the coordinates of the point must be expressed using well-known text (WKT) syntax. For example, the string “POINT (30 10)” is the WKT markup syntax that describes a point whose x coordinate is 30 and whose y coordinate is 10). By supporting WKT, this function can process the output of the ta.geometryloader function, which is expressed in WKT. For example, you can use the ta.eometryloader function to convert GIS data formats (for example, shapefile (.shp), MapInfo TAB (.tab), Keyhole Markup Language (KML), and GeoJSON) to WKT and use the ta.pointinpolygon function to process the resulting WKT data. For more information about WKT, refer to the following URL: http://www.geoapi.org/3.0/javadoc/org/opengis/referencing/doc-files/WKT.html If two columns are specified, the function assumes that they represent the two coordinates (for example, latitude and longitude) of the input points. The twocolumn format for representing points is useful when the input data consists of raw latitude and longitude pairs. When two columns are specified, the output of the aa.ipgeo function can be used as input to this function.",
      "description": "The names of the columns that contain the point coordinate values from the source input table. If only one column is specified, the coordinates of the point must be expressed using well-known text (WKT) syntax. For example, the string “POINT (30 10)” is the WKT markup syntax that describes a point whose x coordinate is 30 and whose y coordinate is 10). By supporting WKT, this function can process the output of the GeometryLoader function, which is expressed in WKT. For example, you can use the GeometryLoader function to convert GIS data formats (for example, shapefile (.shp), MapInfo TAB (.tab), Keyhole Markup Language (KML), and GeoJSON) to WKT and use the PointInPolygon function to process the resulting WKT data. For more information about WKT, refer to the following URL: http://www.geoapi.org/3.0/javadoc/org/opengis/referencing/doc-files/WKT.html If two columns are specified, the function assumes that they represent the two coordinates (for example, latitude and longitude) of the input points. The twocolumn format for representing points is useful when the input data consists of raw latitude and longitude pairs. When two columns are specified, the output of the IPGEO function can be used as input to this function.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "source.location.column",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "targetTable": [
        "reference"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "STRING"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ReferenceLocationColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The column from the reference input table that contains the polygon coordinate values. The content should be of type WKT.",
      "description": "The column from the reference input table that contains the polygon coordinate values. The content should be of type WKT.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "reference.location.column",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "reference"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ReferenceNameColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The columns from the reference input table that contains the polygon name. These columns are passed to the output.",
      "description": "The columns from the reference input table that contains the polygon name. These columns are passed to the output.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "reference.name.columns",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "targetTable": [
        "source"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The columns from the source input table that are passed to the output table. By default, no columns are passed to the output table.",
      "description": "The columns from the source input table that are passed to the output table. By default, no columns are passed to the output table.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": false,
      "name": "OutputAll",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Whether to specify, in the output table, that the point is not in a polygon. The default value is 'false' (does not specify that the point is not in a polygon).",
      "description": "Whether to specify, in the output table, that the point is not in a polygon. The default value is 'false' (does not specify that the point is not in a polygon).",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "output.all",
      "useInR": true,
      "rOrderNum": 6
    }
  ]
}
