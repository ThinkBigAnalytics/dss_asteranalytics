{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "IFFT",
  "function_version": "1.0",
  "function_type": "non-driver",
  "function_r_name": "aa.ifft",
  "short_description": "This function computes the Inverse Fourier Transform of 1D/2D/3D signals.",
  "long_description": "This function uses a variant of Fast Fourier Transform algorithm to compute the Inverse Fourier spectrum of signals in 1D (timeseries), 2D (2D Images), 3D (3D Images) dimensions.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": true,
      "partitionByOne": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the table containing the input data.",
      "description": "Specifies the table containing the input data.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ValueColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of one to 16 inputtable columns that contain the signal values on which to perform FFT.",
      "description": "Specifies the names of one to 16 inputtable columns that contain the signal values on which to perform FFT.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "value.columns",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "defaultValue": 1,
      "lowerBound": 0,
      "upperBound": 3,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "NumDimensions",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the number of dimensions in the signal. The parameter dimensions must be the INTEGER value 1, 2, or 3. (A time series has one dimension; an image has two or three.)",
      "description": "Specifies the number of dimensions in the signal. The parameter dimensions must be the INTEGER value 1, 2, or 3. (A time series has one dimension; an image has two or three.)",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "num.dimensions",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "defaultValue": 16777216,
      "lowerBound": 0,
      "upperBound": 16777216,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "FFTLength",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum signal length. The parameter FFT_length must be an INTEGER. The default value is 2^24. If the signal length exceeds FFT_length, the function truncates it to FFT_length. Note: In a signal with more than one dimension, each dimension must have the same length.",
      "description": "Specifies the maximum signal length. The parameter FFT_length must be an INTEGER. The default value is 2^24. If the signal length exceeds FFT_length, the function truncates it to FFT_length. Note: In a signal with more than one dimension, each dimension must have the same length.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "fft.length",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "defaultValue": false,
      "name": "OutputPolarCoordinates",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether to output polar coordinates— (magnitude, phase). The default value is 'false'.",
      "description": "Specifies whether to output polar coordinates— (magnitude, phase). The default value is 'false'.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "output.polar.coordinates",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "defaultValue": false,
      "name": "InputPolarCoordinates",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Relevant only if IsSignalRealValued is 'true'. Specifies whether to read complex numbers as polar coordinates— (magnitude, phase). The default value is 'false'.",
      "description": "Relevant only if IsSignalRealValued is 'true'. Specifies whether to read complex numbers as polar coordinates— (magnitude, phase). The default value is 'false'.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "input.polar.coordinates",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "defaultValue": false,
      "name": "PadNonPowerOfTwoLengths",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether to pad the input signal with zeros to round up to the closest power of two. The default value is 'true'. If you specify 'false', the function truncates the input signal and rounds down to the closest power of 2^dimensions that is less than the input signal.",
      "description": "Specifies whether to pad the input signal with zeros to round up to the closest power of two. The default value is 'true'. If you specify 'false', the function truncates the input signal and rounds down to the closest power of 2^dimensions that is less than the input signal.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "pad.nonpower",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": true,
      "name": "IsSignalRealValued",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether the value columns contain REAL (DOUBLE PRECISION) values. The default value is 'true'. If you specify 'false', the function interprets the values as complex numbers; therefore, they must be multiples of two.",
      "description": "Specifies whether the value columns contain REAL (DOUBLE PRECISION) values. The default value is 'true'. If you specify 'false', the function interprets the values as complex numbers; therefore, they must be multiples of two.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "issignal.real.valued",
      "useInR": true,
      "rOrderNum": 8
    }
  ]
}
