{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "LoopyBeliefPropagation",
  "function_version": "1.1",
  "function_type": "non-driver",
  "function_r_name": "aa.loopy.belief.propagation",
  "short_description": "This function predicts the labels for unobserved nodes based on the labels of observed nodes.",
  "long_description": "This function predicts the labels for unobserved nodes based on the labels of observed nodes. It works on a binary labeled graph. Some nodes have labels, while labels for other nodes are missing.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "edges",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "",
      "description": "",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "edges.data",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "vertices",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "",
      "description": "",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "vertices.data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "observation",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "",
      "description": "",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "observation.data",
      "useInR": true,
      "rOrderNum": 3
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "edges"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TargetKey",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the edges table columns that comprise the key of the target vertices.",
      "description": "Specifies the names of the edges table columns that comprise the key of the target vertices.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "target.key",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "observation"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ObservationColumn",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the observation table column that contains the observations.",
      "description": "Specifies the name of the observation table column that contains the observations.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "observation.column",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "targetTable": [
        "edges"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "EdgeWeight",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the edges table column that contains the edge weights. The function uses only positive edge weights. The sum of the edge weights that the function uses must be 1.",
      "description": "Specifies the name of the edges table column that contains the edge weights. The function uses only positive edge weights. The sum of the edge weights that the function uses must be 1.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "edge.weight",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "targetTable": [
        "vertices"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of the vertices table columns to copy to the output table.",
      "description": "Specifies the names of the vertices table columns to copy to the output table.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "defaultValue": 20,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxIterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum number of iterations that the algorithm can run. The default value is 20. ",
      "description": "Specifies the maximum number of iterations that the algorithm can run. The default value is 20. ",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.iter.num",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 1.0E-4,
      "lowerBound": 0,
      "upperBound": Infinity,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Threshold",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the threshold value for convergence. The default value is 0.0001. ",
      "description": "Specifies the threshold value for convergence. The default value is 0.0001. ",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "threshold",
      "useInR": true,
      "rOrderNum": 9
    }
  ]
}
