{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "KModes",
  "function_version": "1.1",
  "function_type": "driver",
  "function_r_name": "aa.kmodes",
  "short_description": "Performs K-Modes clustering on a data set",
  "long_description": "Finds cluster centroids and assigns data points to clusters using the k-modes algorithm.",
  "argument_clauses": [
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Domain",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The address of the Queen. The host parameter is the Aster Database Queen’s IP address or hostname.",
      "description": "The address of the Queen. The host parameter is the Aster Database Queen’s IP address or hostname.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Database",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The name of the database where the input table is located.",
      "description": "The name of the database where the input table is located.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "UserId",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The Aster Database user name of the user running this function.",
      "description": "The Aster Database user name of the user running this function.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Password",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The Aster Database password of the user.",
      "description": "The Aster Database password of the user.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "SSLSettings",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A string that includes all the SSL settings, except the password for the truststore.",
      "description": "A string that includes all the SSL settings, except the password for the truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "SSLTrustStorePassword",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The password for the SSL truststore.",
      "description": "The password for the SSL truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "isOutputTable": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": " Input table is the table containing the list of features by which we are clustering the data.",
      "description": " Input table is the table containing the list of features by which we are clustering the data.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "isOutputTable": false,
      "name": "InitialSeedTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "An input table containing the points that serve as initial cluster centers. initial.seed cannot be used if modes is used and is required if modes is not used.",
      "description": "An input table containing the points that serve as initial cluster centers. InitialSeedTable cannot be used if NumClusters is used and is required if NumClusters is not used.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "initial.seed",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "isOutputTable": true,
      "name": "OutputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Output table is the table where output is stored. The output table contains the centroids of the clusters.",
      "description": "Output table is the table where output is stored. The output table contains the centroids of the clusters.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "clusters.centroids",
      "useInR": true,
      "rOrderNum": 100
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "InputColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": " Indicates which columns from the input table will be used for clustering.",
      "description": " Indicates which columns from the input table will be used for clustering.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "input.columns",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "AsCategories",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Indicates which numeric categories should be interpreted as categorical variables. Input columns must contain numeric SQL types.",
      "description": "Indicates which numeric categories should be interpreted as categorical variables. Input columns must contain numeric SQL types.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "as.categories",
      "useInR": true,
      "rOrderNum": 11
    },
    {
      "targetTable": [
        "InitialSeedTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ModelIdColumn",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "If this argument is present, it indicates that the table specified in initial.seed contains more than one set of seed values (that is, it contains seed values for more than one model). This argument specifies the column in initial.seed that identifies which rows are associated with each model.",
      "description": "If this argument is present, it indicates that the table specified in InitialSeedTable contains more than one set of seed values (that is, it contains seed values for more than one model). This argument specifies the column in InitialSeedTable that identifies which rows are associated with each model.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "model.id.column",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "GROUPTYPE"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "SeedColumn",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The seed.column is required to ensure repeatable sampling if the seed is specified.",
      "description": "The SeedColumn is required to ensure repeatable sampling if the seed is specified.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "seed.column",
      "useInR": true,
      "rOrderNum": 12
    },
    {
      "lowerBound": 0,
      "lowerBoundType": "EXCLUSIVE",
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "NumClusters",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "An integer or a list of integers. If a single value is given, the function trains a model with that number of clusters. If a list of integers is supplied, the function trains a model for each value. Initial seeds are specified by performing aa.kmeans|| sampling using the FixedSample function. modes cannot be used if initial.seed is used and is required if initial.seed is not used.",
      "description": "An integer or a list of integers. If a single value is given, the function trains a model with that number of clusters. If a list of integers is supplied, the function trains a model for each value. Initial seeds are specified by performing KMeans|| sampling using the FixedSample function. NumClusters cannot be used if InitialSeedTable is used and is required if InitialSeedTable is not used.",
      "datatype": "INTEGER",
      "allowsLists": true,
      "rName": "modes",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "defaultValue": 0.0395,
      "lowerBound": 0,
      "upperBound": Infinity,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Threshold",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "This is the convergence threshold. When the centroids move by less than this amount, the algorithm has converged. The input value must be no less than 0.0. The default value is 0.0395.",
      "description": "This is the convergence threshold. When the centroids move by less than this amount, the algorithm has converged. The input value must be no less than 0.0. The default value is 0.0395.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "threshold",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "defaultValue": 10,
      "rDefaultValue": 10,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxIterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " An integer specifying the maximum number of iterations that the algorithm will runbefore quitting if the convergence threshold has not been met. The input value must be greater than 0. The default value is 10.",
      "description": " An integer specifying the maximum number of iterations that the algorithm will runbefore quitting if the convergence threshold has not been met. The input value must be greater than 0. The default value is 10.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "iter.max",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "permittedValues": [
        "MANHATTAN",
        "EUCLIDEAN"
      ],
      "defaultValue": "EUCLIDEAN",
      "isOutputColumn": false,
      "name": "Distance",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Indicates which distance metric the aa.kmodes function will use for numeric dimensions. The permitted input values are [Manhattan, Euclidean]. The default value is Euclidean.",
      "description": "Indicates which distance metric the Kmodes function will use for numeric dimensions. The permitted input values are [Manhattan, Euclidean]. The default value is Euclidean.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "distance",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "permittedValues": [
        "OVERLAP",
        "HAMMING"
      ],
      "defaultValue": "OVERLAP",
      "isOutputColumn": false,
      "name": "CategoricalDistance",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Indicates which distance metric the aa.kmodes function will use for categorical dimensions. The permitted input values are [Overlap, Hamming]. The default value is Overlap. Overlap: distance is 0 if two points are in the same category or 1 if they are in different categories. Hamming: Used for categories that are strings of equal length. The fraction of characters that are different.",
      "description": "Indicates which distance metric the Kmodes function will use for categorical dimensions. The permitted input values are [Overlap, Hamming]. The default value is Overlap. Overlap: Distance is 0 if two points are in the same category or 1 if they are in different categories. Hamming: Used for categories that are strings of equal length. The fraction of characters that are different.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "categorical.distance",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "CategoryWeights",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The weights to be assigned to each category in the aa.kmodes distance.",
      "description": "The weights to be assigned to each category in the KModes distance.",
      "datatype": "DOUBLE",
      "allowsLists": true,
      "rName": "category.weights",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "lowerBound": -9223372036854775808,
      "upperBound": 9223372036854775807,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Seed",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the random seed with which to initialize the algorithm (a LONG value).",
      "description": "Specifies the random seed with which to initialize the algorithm (a LONG value).",
      "datatype": "LONG",
      "allowsLists": false,
      "rName": "seed",
      "useInR": true,
      "rOrderNum": 13
    }
  ]
}
