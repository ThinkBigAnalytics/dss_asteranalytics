{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "RtChangePointDetection",
  "function_version": "1.1",
  "function_type": "non-driver",
  "function_r_name": "aa.rt.changepoint.detection",
  "short_description": "RtChangePointDetection function detects change point for real time data.",
  "long_description": "RtChangePointDetection function detects change point for real time data.",
  "input_tables": [
    {
      "isOrdered": true,
      "useInR": true,
      "name": "input",
      "rName": "data",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "allowsLists": false,
      "partitionByOne": false,
      "rDescription": "This table defining the input time series data.",
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "alternateNames": [],
      "description": "This table defining the input time series data."
    }
  ],
  "argument_clauses": [
    {
      "name": "ValueColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "value.column",
      "allowedTypes": [],
      "datatype": "COLUMNS",
      "targetTable": [
        "input"
      ],
      "rOrderNum": 2,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the input table column that contains the time series data.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the input table column that contains the time series data."
    },
    {
      "name": "Accumulate",
      "allowsLists": true,
      "useInR": true,
      "rName": "accumulate",
      "allowedTypes": [],
      "datatype": "COLUMNS",
      "targetTable": [
        "input"
      ],
      "rOrderNum": 3,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the names of the input table columns to copy to the output table. Tip: To identify change points in the output table, specify the columns that appear in partition_exp and order_by_exp",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the names of the input table columns to copy to the output table. Tip: To identify change points in the output table, specify the columns that appear in partition_exp and order_by_exp"
    },
    {
      "name": "SegmentationMethod",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "normal_distribution",
      "rOrderNum": 4,
      "rName": "segmentation.method",
      "isRequired": false,
      "rDescription": "Specifies the segmentation method, normal distribution (in each segment, the data is in a normal distribution). This is the default and only possible value.",
      "alternateNames": [],
      "permittedValues": [
        "normal_distribution"
      ],
      "description": "Specifies the segmentation method, normal distribution (in each segment, the data is in a normal distribution). This is the default and only possible value."
    },
    {
      "name": "WindowSize",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 2,
      "useInR": true,
      "rName": " window.size",
      "datatype": "INTEGER",
      "defaultValue": 10,
      "rOrderNum": 5,
      "allowsLists": false,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the size of the sliding window. The ideal window size depends heavily on the data. You might need to experiment with this value. The default value is 10.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the size of the sliding window. The ideal window size depends heavily on the data. You might need to experiment with this value. The default value is 10."
    },
    {
      "name": "Threshold",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 0,
      "useInR": true,
      "rName": "threshold",
      "datatype": "DOUBLE",
      "defaultValue": 10,
      "rOrderNum": 6,
      "allowsLists": false,
      "upperBound": Infinity,
      "lowerBoundType": "EXCLUSIVE",
      "isRequired": false,
      "rDescription": "A double threshold value. Specifies a DOUBLE PRECISION value that the function compares to ln(L1)\u2212ln(L0). The definition of Log(L1) and Log(L0) are in \u201cBackground\u201d. They are the logarithms of L1 and L2. The default value is 10.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "A double threshold value. Specifies a DOUBLE PRECISION value that the function compares to ln(L1)\u2212ln(L0). The definition of Log(L1) and Log(L0) are in \u201cBackground\u201d. They are the logarithms of L1 and L2. The default value is 10."
    },
    {
      "name": "OutputOption",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "CHANGEPOINT",
      "rOrderNum": 7,
      "rName": "output.option",
      "isRequired": false,
      "rDescription": " Specifies the output table columns. The default value is 'CHANGEPOINT'.",
      "alternateNames": [],
      "permittedValues": [
        "changepoint",
        "segment",
        "verbose"
      ],
      "description": " Specifies the output table columns. The default value is 'CHANGEPOINT'."
    }
  ]
}