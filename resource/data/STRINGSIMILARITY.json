{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "StringSimilarity",
  "function_version": "1.2",
  "function_type": "non-driver",
  "function_r_name": "aa.string.similarity",
  "short_description": "SQL/MR function to compare 2 strings.",
  "long_description": "SQL/MR function to compare 2 strings.",
  "input_tables": [
    {
      "isOrdered": false,
      "useInR": true,
      "name": "input",
      "rName": "data",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "allowsLists": false,
      "partitionByOne": false,
      "rDescription": "The relation that contains the string pairs to be compared.",
      "requiredInputKind": [
        "PartitionByAny"
      ],
      "alternateNames": [],
      "description": "The relation that contains the string pairs to be compared."
    }
  ],
  "argument_clauses": [
    {
      "name": "Accumulate",
      "allowsLists": true,
      "useInR": true,
      "rName": "accumulate",
      "allowedTypes": [],
      "datatype": "COLUMNS",
      "targetTable": [
        "input"
      ],
      "rOrderNum": 4,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "Specifies the names of input table columns to be copied to the output table",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the names of input table columns to be copied to the output table"
    },
    {
      "name": "ComparisonColumnPairs",
      "allowsLists": true,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 2,
      "rName": "comparison.columns",
      "isRequired": true,
      "rDescription": "Specifies pairs of input table columns that contain strings to be compared (column1 and column2), how to compare them (comparison_type), and (optionally) a constant and the name of the output column for their similarity (output_column). The similarity is a value in the range [0, 1]. For comparison_type, use one of these values:  'jaro': Jaro distance,  'jaro_winkler': Jaro-Winkler distance (1 for an exact match, 0 otherwise),  'n-gram': N-gram similarity. If you specify this comparison type, you can specify the value of N with constant.  'LD': Levenshtein distance (the number of edits needed to transform one string into the other, where edits include insertions, deletions, or substitutions of individual characters) You can specify a different comparison_type for every pair of columns. The default output_column is 'sim_i', where i is the sequence number of the column pair.",
      "alternateNames": [],
      "permittedValues": [],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies pairs of input table columns that contain strings to be compared (column1 and column2), how to compare them (comparison_type), and (optionally) a constant and the name of the output column for their similarity (output_column). The similarity is a value in the range [0, 1]. For comparison_type, use one of these values:  'jaro': Jaro distance,  'jaro_winkler': Jaro-Winkler distance (1 for an exact match, 0 otherwise),  'n-gram': N-gram similarity. If you specify this comparison type, you can specify the value of N with constant.  'LD': Levenshtein distance (the number of edits needed to transform one string into the other, where edits include insertions, deletions, or substitutions of individual characters) You can specify a different comparison_type for every pair of columns. The default output_column is 'sim_i', where i is the sequence number of the column pair."
    },
    {
      "name": "Casesensitive",
      "allowsLists": true,
      "useInR": true,
      "datatype": "BOOLEAN",
      "rOrderNum": 3,
      "rName": "case.sensitive",
      "isRequired": false,
      "rDescription": "Specifies whether string comparison is case-sensitive. The default value is 'false'. You can specify either one value for all pairs or one value for each pair. If you specify one value for each pair, then the ith value applies to the ith pair.",
      "alternateNames": [],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies whether string comparison is case-sensitive. The default value is 'false'. You can specify either one value for all pairs or one value for each pair. If you specify one value for each pair, then the ith value applies to the ith pair."
    }
  ]
}