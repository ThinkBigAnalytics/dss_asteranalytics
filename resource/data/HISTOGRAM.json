{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "Histogram",
  "function_version": "1.1",
  "function_type": "driver",
  "function_r_name": "aa.hist",
  "short_description": "Performs histogram calculation on a data set",
  "long_description": "Enhanced histogram calculation on a data set, which accepts bin breaks or bin <start,end> as input or determines them auto, output <bin number,bin_start, bin_end, bin_count, bin_percent>.",
  "input_tables": [
    {
      "name": "InputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "The table containing the input data.",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "rName": "data",
      "alternateNames": [],
      "rDescription": "The table containing the input data.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    },
    {
      "name": "CustomBinTable",
      "allowsLists": false,
      "useInR": true,
      "description": "A table containing the boundary points between bins. If this argument is present, CustomBinColumn must also be present. AutoBin, StartValue, BinSize, and EndValue cannot be present.",
      "isRequired": false,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 3,
      "rName": "custom.bin.table",
      "alternateNames": [],
      "rDescription": "A table containing the boundary points between bins. If this argument is present, custom.bin.column must also be present. auto.bin, start.value, bin.size, and end.value cannot be present.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    }
  ],
  "output_tables": [
    {
      "name": "OutputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Name for the table that the function will generate, containing the output.",
      "isRequired": true,
      "datatype": "TABLE_NAME",
      "rOrderNum": 100,
      "rName": "output.table",
      "alternateNames": [],
      "rDescription": "Name for the table that the function will generate, containing the output.",
      "isOutputTable": true
    }
  ],
  "argument_clauses": [
    {
      "name": "ValueColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "value.column",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 8,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "The column in the input table for which statistics will be computed. Column must contain a numeric SQL types (integer, bigint, real, double precision, numeric, decimal, smallint).",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "The column in the input table for which statistics will be computed. Column must contain a numeric SQL types (integer, bigint, real, double precision, numeric, decimal, smallint)."
    },
    {
      "name": "CustomBinColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "custom.bin.column",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "CustomBinTable"
      ],
      "rOrderNum": 4,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "The column in the custom.bin.table containing the boundary values. Input columns must contain numeric SQL types. If this argument is present, custom.bin.table must also be present. auto.bin, start.value, bin.size, and end.value cannot be present.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "The column in the CustomBinTable containing the boundary values. Input columns must contain numeric SQL types. If this argument is present, CustomBinTable must also be present. AutoBin, StartValue, BinSize, and EndValue cannot be present."
    },
    {
      "name": "GroupbyColumns",
      "allowsLists": true,
      "useInR": true,
      "rName": "groupby.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 10,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "Columns in the input table used to group values for binning. These columns cannot contain doubles or floats.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "GROUPTYPE"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Columns in the input table used to group values for binning. These columns cannot contain doubles or floats."
    },
    {
      "name": "Inclusion",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "left",
      "rOrderNum": 9,
      "rName": "inclusion",
      "isRequired": false,
      "rDescription": "Indicates whether points on bin boundaries should be included in the bin on the left or the bin on the right. The permitted values are [left, right]. The default value is left.",
      "alternateNames": [],
      "permittedValues": [
        "left",
        "right"
      ],
      "description": "Indicates whether points on bin boundaries should be included in the bin on the left or the bin on the right. The permitted values are [left, right]. The default value is left."
    },
    {
      "name": "AutoBin",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 2,
      "rName": "auto.bin",
      "isRequired": false,
      "rDescription": "Specifies either the algorithm to be used for selecting bin boundaries or the approximate number of bins to be found. The permitted values are STURGES, SCOTT, or a positive integer. If this argument is present, custom.bin.table, custom.bin.column, start.value, bin.size, and end.value cannot be present.",
      "alternateNames": [
        "Bin_Select"
      ],
      "permittedValues": [],
      "description": "Specifies either the algorithm to be used for selecting bin boundaries or the approximate number of bins to be found. The permitted values are STURGES, SCOTT, or a positive integer. If this argument is present, CustomBinTable, CustomBinColumn, StartValue, BinSize, and EndValue cannot be present."
    },
    {
      "name": "StartValue",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": -Infinity,
      "useInR": true,
      "rName": "start.value",
      "datatype": "DOUBLE",
      "allowNaN": false,
      "rOrderNum": 6,
      "allowsLists": false,
      "upperBound": Infinity,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "The smallest value to be used in binning. If this argument is present, bin.size and en.value must also be present. auto.bin, custom.bin.table and custom.bin.column cannot be present.",
      "alternateNames": [],
      "description": "The smallest value to be used in binning. If this argument is present, BinSize and EndValue must also be present. AutoBin, CustomBinTable and CustomBinColumn cannot be present."
    },
    {
      "name": "EndValue",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": -Infinity,
      "useInR": true,
      "rName": "end.value",
      "datatype": "DOUBLE",
      "allowNaN": false,
      "rOrderNum": 7,
      "allowsLists": false,
      "upperBound": Infinity,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "The largest value to be used in binning. If this argument is present, start.value and bin.size must also be present. auto.bin, custom.bin.table and custom.bin.column cannot be present.",
      "alternateNames": [],
      "description": "The largest value to be used in binning. If this argument is present, StartValue and BinSize must also be present. AutoBin, CustomBinTable and CustomBinColumn cannot be present."
    },
    {
      "name": "BinSize",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 0,
      "useInR": true,
      "rName": "bin.size",
      "datatype": "DOUBLE",
      "allowNaN": false,
      "rOrderNum": 5,
      "allowsLists": false,
      "upperBound": Infinity,
      "lowerBoundType": "EXCLUSIVE",
      "isRequired": false,
      "rDescription": "For equally sized bins, a double value specifying the width of the bin. Omit this argument if you are not using equally sized bins. The input value must be greater than 0.0. If this argument is present, start.value and end.value must also be present. auto.bin, custom.bin.table and custom.bin.column cannot be present.",
      "alternateNames": [],
      "description": "For equally sized bins, a double value specifying the width of the bin. Omit this argument if you are not using equally sized bins. The input value must be greater than 0.0. If this argument is present, StartValue and EndValue must also be present. AutoBin, CustomBinTable and CustomBinColumn cannot be present."
    }
  ]
}