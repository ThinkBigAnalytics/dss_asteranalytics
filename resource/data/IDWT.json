{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "IDWT",
  "function_version": "1.5",
  "function_type": "driver",
  "function_r_name": "aa.idwt",
  "short_description": "This function performs 1D reverse wavelet transform.",
  "long_description": "This function is a driver function used for 1D DWT inverse transformation (reconstruction). It can perform transformation on multiple sequences simultaneously.  For each sequence, the related wavelet coefficients are stored in the meta table.  Finally, the function reconstructs values in time domain. ",
  "input_tables": [
    {
      "name": "InputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the input table or view that contains the coefficients generated by DWT. Typically, this table is the output table of DWT.",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "rName": "coefficient",
      "alternateNames": [],
      "rDescription": "Specifies the name of the input table or view that contains the coefficients generated by ta.dwt. Typically, this table is the output table of ta.dwt.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    },
    {
      "name": "MetaTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the input table or view that contains the meta information used in DWT. Typically, this table is the meta table output by DWT.",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 2,
      "rName": "meta.table",
      "alternateNames": [],
      "rDescription": " Specifies the name of the input table or view that contains the meta information used in ta.dwt. Typically, this table is the meta table output by ta.dwt.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    }
  ],
  "output_tables": [
    {
      "name": "OutputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name for the table that the function creates to store the reconstructed result. This table must not exist.",
      "isRequired": true,
      "datatype": "TABLE_NAME",
      "rOrderNum": 100,
      "rName": "output.table",
      "alternateNames": [],
      "rDescription": "Specifies the name for the table that the function creates to store the reconstructed result. This table must not exist.",
      "isOutputTable": true
    }
  ],
  "argument_clauses": [
    {
      "name": "SortColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "sort.column",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 4,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the input column that represents the order of coefficients in each sequence (the waveletid column in the ta.dwt output table). The column must contain a sequence of integer values that start from 1 for each sequence. If a value is missing from the sequence, then the function treats the corresponding data column as 0.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the input column that represents the order of coefficients in each sequence (the waveletid column in the DWT output table). The column must contain a sequence of integer values that start from 1 for each sequence. If a value is missing from the sequence, then the function treats the corresponding data column as 0."
    },
    {
      "name": "InputColumns",
      "allowsLists": true,
      "useInR": true,
      "rName": "input.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 3,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the names of the columns in the data or view that contain the data to be transformed. These columns must contain numeric values between -1e308 and 1e308. The function treats NULL as 0.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the names of the columns in the input table or view that contain the data to be transformed. These columns must contain numeric values between -1e308 and 1e308. The function treats NULL as 0."
    },
    {
      "name": "PartitionColumns",
      "allowsLists": true,
      "useInR": true,
      "rName": "partition.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 5,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "Specifies the names of the partition.columns, which identify the sequences. Rows with the same partition.columns values belong to the same sequence. If you specify multiple partition.columns, then the function treats the first one as the distribute key of the output and meta tables. By default, all rows belong to one sequence, and the function generates a distribute key column named dwt_idrandom_name in both the output table and the meta table. In both tables, every cell of dwt_idrandom_name has the value 1.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": " Specifies the names of the partition columns, which identify the sequences. Rows with the same partition column values belong to the same sequence. If you specify multiple partition columns, then the function treats the first one as the distribute key of the output and meta tables. By default, all rows belong to one sequence, and the function generates a distribute key column named dwt_idrandom_name in both the output table and the meta table. In both tables, every cell of dwt_idrandom_name has the value 1."
    }
  ]
}