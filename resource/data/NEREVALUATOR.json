{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "NEREvaluator",
  "function_version": "1.4",
  "function_type": "non-driver",
  "function_r_name": "aa.ner.evaluate",
  "short_description": "Named Entity Recognition Evaluation SQL/MR function",
  "long_description": "Named Entity Recognition Evaluation SQL/MR function",
  "input_tables": [
    {
      "isOrdered": false,
      "useInR": true,
      "name": "input",
      "rName": "data",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "allowsLists": false,
      "partitionByOne": true,
      "rDescription": "Specifies the name of the table that contains the input data.",
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "alternateNames": [],
      "description": "Specifies the name of the table that contains the input data."
    }
  ],
  "argument_clauses": [
    {
      "name": "TextColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "text.coloumn",
      "allowedTypes": [],
      "datatype": "COLUMNS",
      "targetTable": [
        "input"
      ],
      "rOrderNum": 2,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the input table column that contains the text to analyze.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the input table column that contains the text to analyze."
    },
    {
      "name": "Model",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 3,
      "rName": "model",
      "isRequired": true,
      "rDescription": "Specifies the CRF model file to evaluate, generated by \u201cta.nertrainer\u201d. If you specified the extractor.jar argument in the ta.nertrainer call that generated model_file, then you must specify the same jar_file in this argument. You must install model_file and jar_file in Aster Database under the user search path before calling the ta.ner function. Note: The names model_file and jar_file are case-sensitive.",
      "alternateNames": [],
      "permittedValues": [],
      "description": "Specifies the CRF model file to evaluate, generated by \u201cNERTrainer\u201d. If you specified the ExtractorJAR argument in the NERTrainer call that generated model_file, then you must specify the same jar_file in this argument. You must install model_file and jar_file in Aster Database under the user search path before calling the NER function. Note: The names model_file and jar_file are case-sensitive."
    },
    {
      "name": "Language",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "en",
      "rOrderNum": 4,
      "rName": "language",
      "isRequired": false,
      "rDescription": "Specifies the language of the input text: \u2022 en (English, the default) \u2022 zh_CN (Simplified Chinese) \u2022 zh_TW (Traditional Chinese)",
      "alternateNames": [],
      "permittedValues": [
        "en",
        "zh_CN",
        "zh_TW"
      ],
      "description": "Specifies the language of the input text: \u2022 en (English, the default) \u2022 zh_CN (Simplified Chinese) \u2022 zh_TW (Traditional Chinese)"
    }
  ]
}