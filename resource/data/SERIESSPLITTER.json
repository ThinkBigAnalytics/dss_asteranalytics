{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "1",
  "json_content_version": "1",
  "function_name": "SeriesSplitter",
  "function_version": "1.0",
  "short_description": "Splits the partitions in the input table.",
  "long_description": "SeriesSplitter splits the partitions in the input table into smaller-sized sub-partitions.",
  "argument_clauses": [
    {
      "isOutputColumn": false,
      "name": "InputTable",
      "isRequired": true,
      "description": "Specifies the input table, view or query representing input data that needs to be split.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "input.table",
      "useInR": true
    },
    {
      "isOutputColumn": false,
      "allowPadding": true,
      "name": "PartitionByColumns",
      "isRequired": true,
      "description": "Specifies the partitioning columns of the input table.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "partition.by.columns",
      "useInR": true
    },
    {
      "defaultValue": "partitioned_",
      "isOutputColumn": false,
      "name": "OutputTable",
      "isRequired": false,
      "description": "Specifies the name of the output table that contains data splits for all partitions.  The default value is partitioned_.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "output.table",
      "useInR": true
    },
    {
      "isOutputColumn": false,
      "allowPadding": true,
      "name": "OrderByColumns",
      "isRequired": false,
      "description": "Specifies the ordering columns of the input table.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "order.by.columns",
      "useInR": true
    },
    {
      "defaultValue": 4,
      "lowerBound": 1,
      "lowerBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "SplitCount",
      "isRequired": false,
      "description": "Specifies the number of splits of a partition in the input table.  The input value must be no less than 1. The default value is 4.",
      "datatype": "LONG",
      "allowsLists": false,
      "rName": "split.count",
      "useInR": true
    },
    {
      "defaultValue": 1000,
      "lowerBound": 1,
      "lowerBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "RowsPerSplit",
      "isRequired": false,
      "description": "Specifies the maximum number of rows in a split. The input value must be no less than 1. The default value is 1000.",
      "datatype": "LONG",
      "allowsLists": false,
      "rName": "rows.per.split",
      "useInR": true
    },
    {
      "defaultValue": [
        1
      ],
      "lowerBound": 0,
      "upperBound": 1000,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "requiredLength": 2,
      "allowPadding": true,
      "name": "DuplicateRowsCount",
      "isRequired": false,
      "description": "Specifies the number of rows that need to be duplicated across split boundaries.  The input list must contain 2 values. Each input value must be no less than 0 and no greater than 1000. The default value is 1.",
      "datatype": "LONG",
      "allowsLists": true,
      "rName": "duplicate.rows.count",
      "useInR": true
    },
    {
      "defaultValue": "split_id",
      "isOutputColumn": true,
      "name": "SplitIdColumn",
      "isRequired": false,
      "description": "Specifies the name of the column that is appended in the output table and contains the split id of a split. If this argument is not specified, a column with name \"split_id\" is appended. If the table already contains the column with this name, the function returns with an error. The user needs to specify this clause in such cases. The argument clause accepts varchar data type. The default value is split_id.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "split.id.column",
      "useInR": true
    },
    {
      "isOutputColumn": false,
      "allowPadding": true,
      "name": "Accumulate",
      "isRequired": false,
      "description": "Specifies the names of the columns from the input table (other than PartitionByColumns and OrderByColumns) that should be appended in the output table.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true
    },
    {
      "defaultValue": "stats_",
      "isOutputColumn": false,
      "name": "StatsTable",
      "isRequired": false,
      "description": "Specifies the name of the stats table that contains the statistics about the operation performed by the function. If the table exists, the method returns with an error. The default value is InputTable prefixed with \"stats_\". The default value is stats_.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "stats.table",
      "useInR": true
    },
    {
      "defaultValue": true,
      "name": "ReturnStatsTable",
      "isRequired": false,
      "description": "Specifies the boolean value that indicates whether the function should emit the data in the StatsTable as the output of the command \"Select * from SeriesSplitter\" statement. When this value is set to false, OutputTable is emitted on the output. The default value is true. The default value is true.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "return.stats.table",
      "useInR": true
    },
    {
      "defaultValue": false,
      "name": "OverwriteOutput",
      "isRequired": false,
      "description": "Specifies the boolean value that tells us whether we should overwrite existing tables StatsTable and OutputTable or not. The default value is false meaning that the existing tables are not overwritten. The default value is false.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "overwrite.output",
      "useInR": true
    },
    {
      "defaultValue": [
        "-1"
      ],
      "isOutputColumn": false,
      "matchLengthOfArgument": "OrderByColumns",
      "allowPadding": true,
      "name": "ValuesBeforeFirst",
      "isRequired": false,
      "description": "Specifies the values to be filled in the ordering columns that occur before the first row of the first split in a partition as a result of duplicating rows across split boundaries.  The input list must contain the same number of values as the 'OrderByColumns' argument clause. The default value is -1.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "values.before.first",
      "useInR": true
    },
    {
      "defaultValue": [
        "null"
      ],
      "isOutputColumn": false,
      "matchLengthOfArgument": "OrderByColumns",
      "allowPadding": true,
      "name": "ValuesAfterLast",
      "isRequired": false,
      "description": "Specifies the values to be filled in the ordering columns that occur after the last row of the last split in a partition as a result of duplicating rows across split boundaries.  The input list must contain the same number of values as the 'OrderByColumns' argument clause. The default value is null.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "values.after.last",
      "useInR": true
    },
    {
      "isOutputColumn": true,
      "name": "DuplicateColumn",
      "isRequired": false,
      "description": "Specifies the name of the column that contains the information that whether a row is duplicated from the neighboring split or not. This column contains 1 (for duplicate) and 0 (for non-duplicate) values.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "duplicate.column",
      "useInR": true
    },
    {
      "defaultValue": false,
      "name": "PartialSplitId",
      "isRequired": false,
      "description": "Specifies the boolean value that indicates whether only the numeric split_id should be used in the SplitIdColumn or not.  The default value is false.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "partial.split.id",
      "useInR": true
    }
  ]
}