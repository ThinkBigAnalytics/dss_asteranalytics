{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "Text_Parser",
  "function_version": "1.4",
  "function_type": "non-driver",
  "function_r_name": "aa.text.parser",
  "short_description": "Tokenizes document and returns counts for each unique token",
  "long_description": "Tokenizes the document and returns counts for each unique token.",
  "input_tables": [
    {
      "isOrdered": false,
      "useInR": true,
      "name": "input",
      "rName": "data",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "allowsLists": false,
      "partitionByOne": false,
      "rDescription": "The relation that contains the text to be tokenized.",
      "requiredInputKind": [
        "PartitionByAny"
      ],
      "alternateNames": [],
      "description": "The relation that contains the text to be tokenized."
    }
  ],
  "argument_clauses": [
    {
      "name": "TextColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "text.column",
      "allowedTypes": [],
      "datatype": "COLUMNS",
      "targetTable": [
        "input"
      ],
      "rOrderNum": 2,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the input column whose contents are to be tokenized.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "STRING"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the input column whose contents are to be tokenized."
    },
    {
      "name": "Accumulate",
      "allowsLists": true,
      "useInR": true,
      "rName": "accumulate",
      "allowedTypes": [],
      "datatype": "COLUMNS",
      "targetTable": [
        "input"
      ],
      "rOrderNum": 8,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "Specifies the names of the input columns to copy to the output table. By default, the function copies all input columns to the output table. Note: No accumulate_column can be the same as token_column or total_column.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the names of the input columns to copy to the output table. By default, the function copies all input columns to the output table. Note: No accumulate_column can be the same as token_column or total_column."
    },
    {
      "name": "ToLowerCase",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": true,
      "rOrderNum": 3,
      "rName": "to.lower.case",
      "isRequired": false,
      "rDescription": "Specifies whether to convert input text to lowercase. The default value is 'true'. Note: The function ignores this argument if the Stemming argument has the value 'true'.",
      "alternateNames": [
        "CaseInsensitive"
      ],
      "description": "Specifies whether to convert input text to lowercase. The default value is 'true'. Note: The function ignores this argument if the Stemming argument has the value 'true'."
    },
    {
      "name": "Stemming",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": false,
      "rOrderNum": 4,
      "rName": "stemming",
      "isRequired": false,
      "rDescription": "Specifies whether to stem the tokens\u2014that is, whether to apply the Porter2 stemming algorithm to each token to reduce it to its root form. Before stemming, the function converts the input text to lowercase and applies the remove.stop.words argument. The default value is 'false'.",
      "alternateNames": [],
      "description": "Specifies whether to stem the tokens\u2014that is, whether to apply the Porter2 stemming algorithm to each token to reduce it to its root form. Before stemming, the function converts the input text to lowercase and applies the RemoveStopWords argument. The default value is 'false'."
    },
    {
      "name": "OutputByWord",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": true,
      "rOrderNum": 15,
      "rName": "output.by.word",
      "isRequired": false,
      "rDescription": "Specifies whether to output each token of each input document in its own row in the output table. The default value is 'true'. If you specify 'false', then the function outputs each tokenized input document in one row of the output table.",
      "alternateNames": [],
      "description": "Specifies whether to output each token of each input document in its own row in the output table. The default value is 'true'. If you specify 'false', then the function outputs each tokenized input document in one row of the output table."
    },
    {
      "name": "StemmingExceptions",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 16,
      "rName": "stemming.exceptions",
      "isRequired": false,
      "rDescription": "Specifies the location of the file that contains the stemming exceptions. A stemming exception is a word followed by its stemmed form. The word and its stemmed form are separated by white space. Each stemming exception is on its own line in the file. For example: bias bias news news goods goods lying lie ugly ugli sky sky early earli The words 'lying', 'ugly', and 'early' are to become 'lie', 'ugli', and 'earli', respectively. The other words are not to change.",
      "alternateNames": [],
      "permittedValues": [],
      "description": "Specifies the location of the file that contains the stemming exceptions. A stemming exception is a word followed by its stemmed form. The word and its stemmed form are separated by white space. Each stemming exception is on its own line in the file. For example: bias bias news news goods goods lying lie ugly ugli sky sky early earli The words 'lying', 'ugly', and 'early' are to become 'lie', 'ugli', and 'earli', respectively. The other words are not to change."
    },
    {
      "name": "RemoveStopWords",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": false,
      "rOrderNum": 12,
      "rName": "remove.stop.words",
      "isRequired": false,
      "rDescription": " Specifies whether to remove stop words from the input text before parsing. The default value is 'false'.",
      "alternateNames": [],
      "description": " Specifies whether to remove stop words from the input text before parsing. The default value is 'false'."
    },
    {
      "name": "StopWords",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 17,
      "rName": "stop.words",
      "isRequired": false,
      "rDescription": "Specifies the location of the file that contains the stop words (words to ignore when parsing text). Each stop word is on its own line in the file. For example: a an the and this with but will",
      "alternateNames": [],
      "permittedValues": [],
      "description": "Specifies the location of the file that contains the stop words (words to ignore when parsing text). Each stop word is on its own line in the file. For example: a an the and this with but will"
    },
    {
      "name": "Delimiter",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "[ \t\f\r\n]+",
      "rOrderNum": 5,
      "rName": "delimiter",
      "isRequired": false,
      "rDescription": "Specifies a regular expression that represents the word delimiter. The default value is '[\t\b\f\r]+').",
      "alternateNames": [],
      "permittedValues": [],
      "description": "Specifies a regular expression that represents the word delimiter. The default value is '[\t\b\f\r]+')."
    },
    {
      "name": "TotalWordsNum",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": false,
      "rOrderNum": 6,
      "rName": "total.words.num",
      "isRequired": false,
      "rDescription": "Specifies whether to output a column that contains the total number of words in the input document. The default value is 'false'.",
      "alternateNames": [
        "Total"
      ],
      "description": "Specifies whether to output a column that contains the total number of words in the input document. The default value is 'false'."
    },
    {
      "name": "Punctuation",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "[.,!?]",
      "rOrderNum": 7,
      "rName": "punctuation",
      "isRequired": false,
      "rDescription": "Specifies a regular expression that represents the punctuation characters to remove from the input text. With stemming ('true'), the recommended value is '[\\\\\\[.,?!:;~()\\\\\\]]+'. The default value is '[.,!?]'.",
      "alternateNames": [],
      "permittedValues": [],
      "description": "Specifies a regular expression that represents the punctuation characters to remove from the input text. With Stemming ('true'), the recommended value is '[\\\\\\[.,?!:;~()\\\\\\]]+'. The default value is '[.,!?]'."
    },
    {
      "name": "ListPositions",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": false,
      "rOrderNum": 14,
      "rName": "list.positions",
      "isRequired": false,
      "rDescription": "Specifies whether to output the position of a word in list form. The default value is 'false', which causes the function to output a row for each occurrence of the word. Note: The function ignores this argument if the output.by.word argument has the value 'false'.",
      "alternateNames": [],
      "description": "Specifies whether to output the position of a word in list form. The default value is 'false', which causes the function to output a row for each occurrence of the word. Note: The function ignores this argument if the OutputByWord argument has the value 'false'."
    },
    {
      "name": "TokenColumn",
      "allowsLists": false,
      "isOutputColumn": true,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "token",
      "rOrderNum": 9,
      "rName": "token.column",
      "isRequired": false,
      "rDescription": "Specifies the name of the output column that contains the tokens. The default value is 'token'.",
      "alternateNames": [
        "TokenColumnName"
      ],
      "permittedValues": [],
      "description": "Specifies the name of the output column that contains the tokens. The default value is 'token'."
    },
    {
      "name": "FrequencyColumn",
      "allowsLists": false,
      "isOutputColumn": true,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "frequency",
      "rOrderNum": 10,
      "rName": "frequency.column",
      "isRequired": false,
      "rDescription": "Specifies the name of the output column that contains the frequency of each token. The default value is 'frequency'. Note: The function ignores this argument if the output.by.word argument has the value 'false'.",
      "alternateNames": [
        "FrequencyColumnName"
      ],
      "permittedValues": [],
      "description": "Specifies the name of the output column that contains the frequency of each token. The default value is 'frequency'. Note: The function ignores this argument if the OutputByWord argument has the value 'false'."
    },
    {
      "name": "TotalColumn",
      "allowsLists": false,
      "isOutputColumn": true,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "total_count",
      "rOrderNum": 11,
      "rName": "total.column",
      "isRequired": false,
      "rDescription": "Specifies the name of the output column that contains the total number of words in the input document. The default value is 'total_count'.",
      "alternateNames": [
        "TotalColumnName"
      ],
      "permittedValues": [],
      "description": "Specifies the name of the output column that contains the total number of words in the input document. The default value is 'total_count'."
    },
    {
      "name": "PositionColumn",
      "allowsLists": false,
      "isOutputColumn": true,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "position",
      "rOrderNum": 13,
      "rName": "position.column",
      "isRequired": false,
      "rDescription": "Specifies the name of the output column that contains the position of a word within a document. The default value is 'position'.",
      "alternateNames": [
        "PositionColumnName"
      ],
      "permittedValues": [],
      "description": "Specifies the name of the output column that contains the position of a word within a document. The default value is 'position'."
    }
  ]
}