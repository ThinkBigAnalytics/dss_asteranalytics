{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "TextTagging",
  "function_version": "1.4",
  "function_type": "non-driver",
  "function_r_name": "aa.text.tagging",
  "short_description": "Tag the documents based on the rules defined by user.",
  "long_description": "Tag the documents based on the rules defined by user. The rule definitions should be input by either ON clause or Rules argument. The rule table should follow the schema: tablename(tagname varchar, definition varchar). Five text operators are supported: equal(columnname,str), contain(columnname,str,lower,upper), dist(columnname,str1,str2,lower,upper), dict(columnname,dictionaryname,lower,upper), and superdist(columnname,str1,str2,NW/NR/PARA/SENT,str3,NW/NR/PARA/SENT). These operators can be connected by logic operators: and, or, not.",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByAny"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "input",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "The input table that contains the texts.",
      "description": "The input table that contains the texts.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "requiredInputKind": [
        "Dimension"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "name": "rules",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The input table that contains the rules.",
      "description": "The input table that contains the rules.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "rName": "rules.data",
      "useInR": true,
      "rOrderNum": 2
    }
  ],
  "argument_clauses": [
    {
      "targetTable": [
        "input"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Accumulate",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the names of text table columns to copy to the output table. Note: Do not use the name 'tag' for an accumulate_column, because the function uses that name for the output table column that contains the tags. ",
      "description": "Specifies the names of text table columns to copy to the output table. Note: Do not use the name 'tag' for an accumulate_column, because the function uses that name for the output table column that contains the tags. ",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "Rules",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the tag names and tagging rules. Use this argument if and only if you do not specify a rules table. For information about defining tagging rules, refer to “/Defining Tagging Rules”/ ",
      "description": "Specifies the tag names and tagging rules. Use this argument if and only if you do not specify a rules table. For information about defining tagging rules, refer to “/Defining Tagging Rules”/ ",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "rules",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "permittedValues": [
        "en",
        "zh_CN",
        "zh_TW"
      ],
      "defaultValue": "en",
      "isOutputColumn": false,
      "name": "Language",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the language of the input text:  'en': English (default),  'zh_cn': Simple Chinese,  'zh_tw': Traditional Chinese, If UseTokenizer specifies 'true', then the function uses the value of Language to create the word tokenizer.",
      "description": "Specifies the language of the input text:  'en': English (default),  'zh_cn': Simple Chinese,  'zh_tw': Traditional Chinese, If UseTokenizer specifies 'true', then the function uses the value of Language to create the word tokenizer.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "language",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "defaultValue": false,
      "name": "Tokenize",
      "alternateNames": [
        "UseTokenizer"
      ],
      "isRequired": false,
      "rDescription": "Specifies whether the function tokenizes the input text before evaluating the rules and tokenizes the text string parameter in the rule definition when parsing a rule. If you specify 'true', then you must also specify the Language argument. The default value is 'false'.",
      "description": "Specifies whether the function tokenizes the input text before evaluating the rules and tokenizes the text string parameter in the rule definition when parsing a rule. If you specify 'true', then you must also specify the Language argument. The default value is 'false'.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "tokenize",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "defaultValue": false,
      "name": "OutputbyTag",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether the function outputs a tuple when a text document matches multiple tags. The default value is 'false', which means that one tuple in the output stands for one document and the matched tags are listed in the output column tag.",
      "description": "Specifies whether the function outputs a tuple when a text document matches multiple tags. The default value is 'false', which means that one tuple in the output stands for one document and the matched tags are listed in the output column tag.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "outputby.tag",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "permittedValues": [],
      "defaultValue": ",",
      "isOutputColumn": false,
      "name": "TagDelimiter",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the delimiter that separates multiple tags in the output column tag if outputby.tag has the value 'false' (the default). The default value is the comma (,). If outputby.tag has the value 'true', specifying this argument causes an error.",
      "description": "Specifies the delimiter that separates multiple tags in the output column tag if OutputByTag has the value 'false' (the default). The default value is the comma (,). If OutputByTag has the value 'true', specifying this argument causes an error.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "tag.delimiter",
      "useInR": true,
      "rOrderNum": 7
    }
  ]
}
