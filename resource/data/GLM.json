{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "GLM",
  "function_version": "1.10",
  "function_type": "driver",
  "function_r_name": "aa.glm",
  "short_description": "This function creates a generalized linear model.",
  "long_description": "This function does linear regression model. GLM is an extension of the linear regression model that enables the linear equation to be related to the dependent variables by a link function.",
  "input_tables": [
    {
      "name": "InputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the table that contains the columns",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 3,
      "rName": "data",
      "alternateNames": [],
      "rDescription": "Specifies the name of the table that contains the columns",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    }
  ],
  "output_tables": [
    {
      "name": "OutputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name for the output table of coefficients. This table must not exist. For GLM, the output is written to the screen, and the output table is the table where the coefficients are stored.",
      "isRequired": true,
      "datatype": "TABLE_NAME",
      "rOrderNum": 100,
      "rName": "coefficients",
      "alternateNames": [],
      "rDescription": "Specifies the name for the output table of coefficients. This table must not exist. For GLM, the output is written to the screen, and the output table is the table where the coefficients are stored.",
      "isOutputTable": true
    }
  ],
  "argument_clauses": [
    {
      "name": "InputColumns",
      "allowsLists": true,
      "rOrderNum": -1,
      "useInR": true,
      "rName": "input.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rFormulaUsage": true,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "Specifies the name of the column that contains the dependent variables (Y) followed by the  names of the columns that contain the predictor variables (Xi), in this format:  'Y,X1,X2,...,Xp'.  By default, the first column of the input table is Y and the remaining input table columns  are Xi, except for the column specified by the Weight argument.",
      "alternateNames": [
        "ColumnNames"
      ],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the column that contains the dependent variables (Y) followed by the  names of the columns that contain the predictor variables (Xi), in this format:  'Y,X1,X2,...,Xp'.  By default, the first column of the input table is Y and the remaining input table columns  are Xi, except for the column specified by the Weight argument."
    },
    {
      "name": "CategoricalColumns",
      "allowsLists": true,
      "rOrderNum": -2,
      "useInR": true,
      "rName": "categorical.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rFormulaUsage": true,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "Specifies columnname-value pairs, each of which contains the name of a categorical input column and the category values in that column that the function is to include in the model that it generates. Each columnname-value pair has one these forms: 'columnname:max_cardinality' Limits the categories in the column to the max_cardinality most common ones and groups the others together as 'others'. For example, 'column_a:3' specifies that for column_a, the function uses the 3 most common categories and sets the category of the rows that do not belong to those 3 categories to 'others', 'columnname:(category [, ...])' Limits the categories in the column to those that you specify and groups the others together as 'others'. For example, 'column_a : (red, yellow, blue)' specifies that for column_a, the function uses the categories red, yellow, and blue, and sets the category of the rows that do not belong to those categories to 'others'. 'columnname' All category values appear in the model. If you specify the ColumnNames argument, then the columns that you specify in the categorical.columns argument must also appear in the ColumnNames argument.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies columnname-value pairs, each of which contains the name of a categorical input column and the category values in that column that the function is to include in the model that it generates. Each columnname-value pair has one these forms: 'columnname:max_cardinality' Limits the categories in the column to the max_cardinality most common ones and groups the others together as 'others'. For example, 'column_a:3' specifies that for column_a, the function uses the 3 most common categories and sets the category of the rows that do not belong to those 3 categories to 'others', 'columnname:(category [, ...])' Limits the categories in the column to those that you specify and groups the others together as 'others'. For example, 'column_a : (red, yellow, blue)' specifies that for column_a, the function uses the categories red, yellow, and blue, and sets the category of the rows that do not belong to those categories to 'others', 'columnname' All category values appear in the model. If you specify the ColumnNames argument, then the columns that you specify in the CategoricalColumns argument must also appear in the ColumnNames argument."
    },
    {
      "name": "Weight",
      "allowsLists": false,
      "useInR": true,
      "rName": "weights",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 4,
      "defaultValues": [
        "1.0"
      ],
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "Specifies the name of an input table column that contains the weights to assign to responses. The default value is 1.You can use non-NULL weights to indicate that different observations have different dispersions (with the weights being inversely proportional to the dispersions).Equivalently, when the weights are positive integers wi, each response yi is the mean of wi unit-weight observations. A binomial GLM uses prior weights to give the number of trials when the response is the proportion of successes. A Poisson GLM rarely uses weights. If the weight is less than the response value, then the function throws an exception. Therefore, if the response value is greater than 1 (the default weight), then you must specify a weight that is greater than or equal to the response value.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of an input table column that contains the weights to assign to responses. The default value is 1.You can use non-NULL weights to indicate that different observations have different dispersions (with the weights being inversely proportional to the dispersions).Equivalently, when the weights are positive integers wi, each response yi is the mean of wi unit-weight observations. A binomial GLM uses prior weights to give the number of trials when the response is the proportion of successes. A Poisson GLM rarely uses weights. If the weight is less than the response value, then the function throws an exception. Therefore, if the response value is greater than 1 (the default weight), then you must specify a weight that is greater than or equal to the response value."
    },
    {
      "name": "Family",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "BINOMIAL",
      "rOrderNum": 1,
      "rName": "family",
      "isRequired": false,
      "rDescription": "Specifies the distribution exponential family. Supported values are: 'BINOMIAL' (default), 'LOGISTIC' (equivalent to 'BINOMIAL'), 'POISSON', 'GAUSSIAN', 'GAMMA', 'INVERSE_GAUSSIAN', 'NEGATIVE_BINOMIAL' ",
      "rDefaultValue": "gaussian",
      "alternateNames": [],
      "permittedValues": [
        "LOGISTIC",
        "BINOMIAL",
        "POISSON",
        "GAUSSIAN",
        "GAMMA",
        "INVERSE_GAUSSIAN",
        "NEGATIVE_BINOMIAL"
      ],
      "description": "Specifies the distribution exponential family. Supported values are: 'BINOMIAL' (default), 'LOGISTIC' (equivalent to 'BINOMIAL'), 'POISSON', 'GAUSSIAN', 'GAMMA', 'INVERSE_GAUSSIAN', 'NEGATIVE_BINOMIAL' "
    },
    {
      "name": "LinkFunction",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "CANONICAL",
      "rOrderNum": 2,
      "rName": "linkfunction",
      "isRequired": false,
      "rDescription": "The default value is 'CANONICAL'. The canonical link functions (default link functions) and the link functions that are allowed.",
      "alternateNames": [
        "Link"
      ],
      "permittedValues": [
        "CANONICAL",
        "IDENTITY",
        "INVERSE",
        "LOG",
        "COMPLEMENTARY_LOG_LOG",
        "SQUARE_ROOT",
        "INVERSE_MU_SQUARED",
        "LOGIT",
        "PROBIT",
        "CAUCHIT"
      ],
      "description": "The default value is 'CANONICAL'. The canonical link functions (default link functions) and the link functions that are allowed."
    },
    {
      "name": "Threshold",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": -Infinity,
      "useInR": true,
      "rName": "threshold",
      "datatype": "DOUBLE",
      "defaultValue": 0.01,
      "rOrderNum": 5,
      "allowsLists": false,
      "upperBound": Infinity,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specify the convergence threshold. The default value is 0.01.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specify the convergence threshold. The default value is 0.01."
    },
    {
      "name": "MaxIterNum",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 0,
      "useInR": true,
      "rName": "maxit",
      "datatype": "INTEGER",
      "defaultValue": 25,
      "rOrderNum": 6,
      "allowsLists": false,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the maximum number of iterations that the algorithm runs before quitting if the convergence threshold has not been met. The default value is 25.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the maximum number of iterations that the algorithm runs before quitting if the convergence threshold has not been met. The default value is 25."
    },
    {
      "name": "Intercept",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": true,
      "rOrderNum": 8,
      "rName": "intercept",
      "isRequired": false,
      "rDescription": "Specifies whether the function uses an intercept. For example, in \u00df0+\u00df1*X1+\u00df2*X2+ ....+\u00dfpXp, the intercept is \u00df0. The default value is 'true'.",
      "alternateNames": [],
      "description": "Specifies whether the function uses an intercept. For example, in \u00df0+\u00df1*X1+\u00df2*X2+ ....+\u00dfpXp, the intercept is \u00df0. The default value is 'true'."
    },
    {
      "name": "Step",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": false,
      "rOrderNum": 7,
      "rName": "step",
      "isRequired": false,
      "rDescription": "Specifies whether the function uses a step. The default value is false. If the function uses a step, then it runs with the GLM model that has the lowest Akaike information criterion (AIC) score, drops one predictor from the current predictor group, and repeats this process until no predictor remains.",
      "alternateNames": [],
      "description": "Specifies whether the function uses a step. The default value is false. If the function uses a step, then it runs with the GLM model that has the lowest Akaike information criterion (AIC) score, drops one predictor from the current predictor group, and repeats this process until no predictor remains."
    }
  ]
}