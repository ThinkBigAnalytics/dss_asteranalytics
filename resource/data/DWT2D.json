{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "DWT2D",
  "function_version": "1.4",
  "function_type": "driver",
  "function_r_name": "aa.dwt2d",
  "short_description": "This function performs 2D forward wavelet transform.",
  "long_description": "This function is used for 2D DWT forward transformation. It can perform transformation on multiple sequences simultaneously.  For each sequence, this function generates corresponding coefficients in the outputtable  and the meta data in the metatable",
  "input_tables": [
    {
      "name": "InputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the table or view that contains the sequences to be transformed",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "rName": "data",
      "alternateNames": [],
      "rDescription": "Specifies the name of the table or view that contains the sequences to be transformed",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    },
    {
      "name": "WaveletFilterTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the table that contains the coefficients of the wave filters.",
      "isRequired": false,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 6,
      "rName": "wavelet.filter",
      "alternateNames": [],
      "rDescription": "Specifies the name of the table that contains the coefficients of the wave filters.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    }
  ],
  "output_tables": [
    {
      "name": "OutputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name for the table that the function creates to store the coefficients generated by the wavelet transform. This table must not exist.",
      "isRequired": true,
      "datatype": "TABLE_NAME",
      "rOrderNum": 100,
      "rName": "coefficient",
      "alternateNames": [],
      "rDescription": "Specifies the name for the table that the function creates to store the coefficients generated by the wavelet transform. This table must not exist.",
      "isOutputTable": true
    },
    {
      "name": "MetaTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name for the table that the function creates to store the meta information for the wavelet transform. This table must not exist.",
      "isRequired": true,
      "datatype": "TABLE_NAME",
      "rOrderNum": 101,
      "rName": "meta.table",
      "alternateNames": [],
      "rDescription": "Specifies the name for the table that the function creates to store the meta information for the wavelet transform. This table must not exist.",
      "isOutputTable": true
    }
  ],
  "argument_clauses": [
    {
      "name": "IndexColumns",
      "allowsLists": true,
      "useInR": true,
      "rName": "index.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 3,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the columns that contain the indexes of the input sequences. For a matrix,  indexy_column contains the y coordinates and indexx_column contains the x coordinates.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the columns that contain the indexes of the input sequences. For a matrix,  indexy_column contains the y coordinates and indexx_column contains the x coordinates."
    },
    {
      "name": "InputColumns",
      "allowsLists": true,
      "useInR": true,
      "rName": "input.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 2,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the names of the columns in the input table or view that contain the data to be transformed. These columns must contain numeric values between -1e308 and 1e308. The function treats NULL as 0.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the names of the columns in the input table or view that contain the data to be transformed. These columns must contain numeric values between -1e308 and 1e308. The function treats NULL as 0."
    },
    {
      "name": "PartitionColumns",
      "allowsLists": true,
      "useInR": true,
      "rName": "partition.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 10,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "Specifies the names of the partition.columns, which identify the sequences. Rows with the same partition.columns values belong to the same sequence. If you specify multiple partition.columns, then the function treats the first one as the distribute key of the output and meta tables. By default, all rows belong to one sequence, and the function generates a distribute key column named dwt_idrandom_name in both the output table and the meta table. In both tables, every cell of dwt_idrandom_name has the value 1.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the names of the partition columns, which identify the sequences. Rows with the same partition column values belong to the same sequence. If you specify multiple partition columns, then the function treats the first one as the distribute key of the output and meta tables. By default, all rows belong to one sequence, and the function generates a distribute key column named dwt_idrandom_name in both the output table and the meta table. In both tables, every cell of dwt_idrandom_name has the value 1."
    },
    {
      "name": "Level",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "level",
      "datatype": "INTEGER",
      "allowNaN": false,
      "rOrderNum": 7,
      "allowsLists": false,
      "upperBound": 1000,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": true,
      "rDescription": "Specifies the wavelet transform level. The value level must be an integer in the range [1, 1000].",
      "alternateNames": [],
      "description": "Specifies the wavelet transform level. The value level must be an integer in the range [1, 1000]."
    },
    {
      "name": "Range",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 4,
      "rName": "range",
      "isRequired": false,
      "rDescription": "Specifies the start and end indexes of the input data, all of which must be integers. The default values for each sequence are: \u2022 starty: minimum y index \u2022 startx: minimum x index \u2022 endy: maximum y index \u2022 endx: maximum x index. The function treats any NULL value as 0. The range can specify a maximum of 1,000,000 cells.",
      "alternateNames": [],
      "permittedValues": [],
      "description": "Specifies the start and end indexes of the input data, all of which must be integers. The default values for each sequence are: \u2022 starty: minimum y index \u2022 startx: minimum x index \u2022 endy: maximum y index \u2022 endx: maximum x index. The function treats any NULL value as 0. The range can specify a maximum of 1,000,000 cells."
    },
    {
      "name": "CompactOutput",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": true,
      "rOrderNum": 9,
      "rName": "compact.output",
      "isRequired": false,
      "rDescription": "Specifies whether to ignore (not output) rows in which all coefficient values are very small (having an absolute value less than 1e-12). The default value is 'true'. For a sparse input matrix, ignoring such rows reduces the output table size.",
      "alternateNames": [],
      "description": "Specifies whether to ignore (not output) rows in which all coefficient values are very small (having an absolute value less than 1e-12). The default value is 'true'. For a sparse input matrix, ignoring such rows reduces the output table size."
    },
    {
      "name": "Wavelet",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 5,
      "rName": "wavelet",
      "isRequired": false,
      "rDescription": "Specifies a wavelet filter name",
      "alternateNames": [
        "WaveletName"
      ],
      "permittedValues": [],
      "description": "Specifies a wavelet filter name"
    },
    {
      "name": "ExtensionMode",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "sym",
      "rOrderNum": 8,
      "rName": "extension.mode",
      "isRequired": false,
      "rDescription": " Specifies the method for handling border distortion, an extension_mode from Table 3 - 104. The default value is 'sym'.",
      "alternateNames": [],
      "permittedValues": [
        "sym",
        "zpd",
        "ppd"
      ],
      "description": " Specifies the method for handling border distortion, an extension_mode from Table 3 - 104. The default value is 'sym'."
    }
  ]
}