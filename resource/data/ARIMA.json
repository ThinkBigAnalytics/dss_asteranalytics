{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "Arima",
  "function_version": "1.2",
  "function_type": "driver",
  "function_r_name": "aa.arima",
  "short_description": "Estimate the parameters for given ARIMA model.",
  "long_description": "Estimate the parameters for given ARIMA model based on conditional sum of squares method. User should provide the orders (number of parameters for each part) and period of the model, the function will estimate the parameters with least CSS accordingly.",
  "argument_clauses": [
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Domain",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The address of the Queen. The host parameter is the Aster Database Queen’s IP address or hostname.",
      "description": "The address of the Queen. The host parameter is the Aster Database Queen’s IP address or hostname.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Database",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The name of the database where the input table is located.",
      "description": "The name of the database where the input table is located.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "UserId",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The Aster Database user name of the user running this function.",
      "description": "The Aster Database user name of the user running this function.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Password",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The Aster Database password of the user.",
      "description": "The Aster Database password of the user.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "SSLSettings",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A string that includes all the SSL settings, except the password for the truststore.",
      "description": "A string that includes all the SSL settings, except the password for the truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "SSLTrustStorePassword",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The password for the SSL truststore.",
      "description": "The password for the SSL truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "isOutputTable": false,
      "name": "InputTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table or view that contains the input parameters.",
      "description": "Specifies the name of the table or view that contains the input parameters.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "data",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "isOutputTable": true,
      "name": "ModelTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table where the function outputs the coefficients of the input parameters; that is, the model.",
      "description": "Specifies the name of the table where the function outputs the coefficients of the input parameters; that is, the model.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "coefficient",
      "useInR": true,
      "rOrderNum": 100
    },
    {
      "isOutputTable": true,
      "name": "ResidualTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the table where the function outputs the residuals of the input parameters. Note: Specify this argument if you will input the model to the ta.arimapredict function.",
      "description": " Specifies the name of the table where the function outputs the residuals of the input parameters. Note: Specify this argument if you will input the model to the ArimaPredictor function.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "residual.table",
      "useInR": true,
      "rOrderNum": 101
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "TimestampColumns",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of the input_table columns that specify the sequence (time points) of the input parameters. The sequence must have uniform intervals.",
      "description": "Specifies the names of the input_table columns that specify the sequence (time points) of the input parameters. The sequence must have uniform intervals.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "timestamp.columns",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "InputTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ValueColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the column that contains the time series data in input_table.",
      "description": "Specifies the name of the column that contains the time series data in input_table.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "value.column",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "permittedValues": [],
      "rDefaultValue": "0,0,0",
      "isOutputColumn": false,
      "name": "Orders",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the values of the nonseasonal parameters p, d, and q for the ta.arima model. Each value must be an INT between 0 and 20, inclusive.",
      "description": "Specifies the values of the nonseasonal parameters p, d, and q for the ARIMA model. Each value must be an INT between 0 and 20, inclusive.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "order",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "SeasonalOrders",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specifies the values of the seasonal parameters sp, sd, and sq for the ta.arima model. Each value must be an INT between 0 and 20, inclusive.",
      "description": "Specifies the values of the seasonal parameters sp, sd, and sq for the ARIMA model. Each value must be an INT between 0 and 20, inclusive.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "seasonal",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "lowerBound": 0,
      "upperBound": 1000000,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Period",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the period of a season (m in the formula). This value must be a positive integer value. If you specify seasonal, then you must also specify period.",
      "description": " Specifies the period of a season (m in the formula). This value must be a positive integer value. If you specify SeasonalOrders, then you must also specify Period",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "period",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "defaultValue": false,
      "name": "IncludeMean",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies whether the function adds the mean value (c in the formula) to the ta.arima model. The default value is 'false'. Note: If include.mean is 'true', then both d in Orders and sd in seasonal must be 0.",
      "description": "Specifies whether the function adds the mean value (c in the formula) to the ARIMA model. The default value is 'false'. Note: If IncludeMean is 'true', then both d in Orders and sd in SeasonalOrders must be 0.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "include.mean",
      "useInR": true,
      "rOrderNum": 7
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Fixed",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specifies the values of the parameters. The numeric vector fixed_params must have a value for each parameter (for the correspondence between values and parameters, see the note that follows this table). If you specify include.mean('true'), then you must add the mean value to the end of fixed_params. If a value in fixed_params is non-NaN, then the corresponding parameter is fixed at that value; otherwise, the function optimizes the value of that parameter",
      "description": " Specifies the values of the parameters. The numeric vector fixed_params must have a value for each parameter (for the correspondence between values and parameters, see the note that follows this table). If you specify IncludeMean('true'), then you must add the mean value to the end of fixed_params. If a value in fixed_params is non-NaN, then the corresponding parameter is fixed at that value; otherwise, the function optimizes the value of that parameter.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "fixed",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "InitValues",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the initial values of the parameters. The numeric vector init_params must have a value for each parameter (for the correspondence between values and parameters, see the note that follows this table). If you specify include.mean('true'), then you must add the initial mean value to the end of init_params. If a value is NaN, then the corresponding parameter has the initial value 0.",
      "description": "Specifies the initial values of the parameters. The numeric vector init_params must have a value for each parameter (for the correspondence between values and parameters, see the note that follows this table). If you specify IncludeMean('true'), then you must add the initial mean value to the end of init_params. If a value is NaN, then the corresponding parameter has the initial value 0.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "init",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "defaultValue": 100,
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxIterNum",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the maximum iteration number for estimating the parameters. This value must be a positive integer. The default value is 100.",
      "description": "Specifies the maximum iteration number for estimating the parameters. This value must be a positive integer. The default value is 100.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.iterations",
      "useInR": true,
      "rOrderNum": 10
    }
  ]
}
