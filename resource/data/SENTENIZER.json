{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "1",
  "json_content_version": "1",
  "function_name": "sentenizer",
  "function_version": "1.1",
  "function_type": "non-driver",
  "short_description": "Sentence segmentation SQL/MR function.",
  "long_description": "Many NLP tasks, such as Part-Of-Speech and chunking, begin by identifying sentences. In English, a sentence is ended with a short list of sentence-final punctuation marks, such as  ., ?, !. The Sentenizer function can divide a paragraph to serveral sentences.",
  "input_tables": [
    {
      "isOrdered": false,
      "partitionByOne": false,
      "isRequired": true,
      "description": "The input table that contains the input texts.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "useInR": true
    }
  ],
  "argument_clauses": [
    {
      "checkDuplicate": true,
      "allowedTypes": [
        "bytea"
      ],
      "allowedTypeGroups": [
        "STRING"
      ],
      "requiredLength": 1,
      "allowPadding": true,
      "name": "TextColumn",
      "isRequired": true,
      "description": "The input column that contains the text that will be sentenized. Input columns must contain string SQL types. Input columns can be the following SQL types: bytea.",
      "datatype": "COLUMNS",
      "allowsLists": false,
      "rName": "text.column",
      "useInR": true
    },
    {
      "checkDuplicate": true,
      "allowPadding": true,
      "name": "Accumulate",
      "isRequired": false,
      "description": "Columns from the input table to be passed through from input to output.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true
    }
  ]
}