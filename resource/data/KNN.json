{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "KNN",
  "function_version": "1.4",
  "function_type": "driver",
  "function_r_name": "aa.knn",
  "short_description": "This function uses K nearest neighbors alogrithm to classify the test points according to training points",
  "long_description": "This function uses K nearest neighbors alogrithm to classify the test points according to training points",
  "argument_clauses": [
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Domain",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The address of the Queen. The host parameter is the Aster Database Queen’s IP address or hostname.",
      "description": "The address of the Queen. The host parameter is the Aster Database Queen’s IP address or hostname.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Database",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The name of the database where the input table is located.",
      "description": "The name of the database where the input table is located.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "UserId",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The Aster Database user name of the user running this function.",
      "description": "The Aster Database user name of the user running this function.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "Password",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The Aster Database password of the user.",
      "description": "The Aster Database password of the user.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "SSLSettings",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "A string that includes all the SSL settings, except the password for the truststore.",
      "description": "A string that includes all the SSL settings, except the password for the truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "name": "SSLTrustStorePassword",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "The password for the SSL truststore.",
      "description": "The password for the SSL truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false,
      "rOrderNum": 0
    },
    {
      "isOutputTable": false,
      "name": "TrainingTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table that contains the training data. Each row represents a classified data object.",
      "description": "Specifies the name of the table that contains the training data. Each row represents a classified data object.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "train",
      "useInR": true,
      "rOrderNum": 1
    },
    {
      "isOutputTable": false,
      "name": "TestTable",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the table that contains the test data to be classified by the ta.knn algorithm. Each row represents a test data object.",
      "description": "Specifies the name of the table that contains the test data to be classified by the kNN algorithm. Each row represents a test data object.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "test",
      "useInR": true,
      "rOrderNum": 2
    },
    {
      "isOutputTable": true,
      "name": "OutputTable",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the name of the output table. By default, the function displays the output to the console.",
      "description": "Specifies the name of the output table. By default, the function displays the output to the console.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "output.table",
      "useInR": true,
      "rOrderNum": 100
    },
    {
      "targetTable": [
        "TrainingTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "ResponseColumn",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the name of the training table column that contains the class label or classification of the classified data objects.",
      "description": "Specifies the name of the training table column that contains the class label or classification of the classified data objects.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "response.column",
      "useInR": true,
      "rOrderNum": 4
    },
    {
      "targetTable": [
        "TestTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "requiredLength": 1,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "IdColumn",
      "alternateNames": [
        "TestPointKey"
      ],
      "isRequired": true,
      "rDescription": "Specifies the name of the testing table column that uniquely identifies a data object.",
      "description": "Specifies the name of the testing table column that uniquely identifies a data object.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "id.column",
      "useInR": true,
      "rOrderNum": 5
    },
    {
      "targetTable": [
        "TrainingTable"
      ],
      "checkDuplicate": true,
      "allowedTypes": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "DistanceFeatures",
      "alternateNames": [],
      "isRequired": true,
      "rDescription": "Specifies the names of the training table columns that the function uses to compute the distance between a test object and the training objects. The test table must also have these columns",
      "description": "Specifies the names of the training table columns that the function uses to compute the distance between a test object and the training objects. The test table must also have these columns",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "distance.features",
      "useInR": true,
      "rOrderNum": 6
    },
    {
      "lowerBound": 0,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "K",
      "alternateNames": [
        "NumberK"
      ],
      "isRequired": true,
      "rDescription": "Specifies the number of nearest neighbors to use for classifying the test data.",
      "description": "Specifies the number of nearest neighbors to use for classifying the test data.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "k",
      "useInR": true,
      "rOrderNum": 3
    },
    {
      "lowerBound": -2147483648,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "PartitionBlockSize",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the partition block size to use with force.mapreduce ('true'). The recommended value depends on training data size and number of vworkers. For example, if your training data size is 10 billion and you have 10 vworkers, the recommended partition.block.size is 1/n billion, where n is an integer that corresponds to your vworker nodes’ memory. Omitting this argument or specifying an inappropriate partition.block.size can degrade performance.",
      "description": "Specifies the partition block size to use with ForceMapreduce ('true'). The recommended value depends on training data size and number of vworkers. For example, if your training data size is 10 billion and you have 10 vworkers, the recommended partition_block_size is 1/n billion, where n is an integer that corresponds to your vworker nodes’ memory. Omitting this argument or specifying an inappropriate partition_block_size can degrade performance.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "parblock.size",
      "useInR": true,
      "rOrderNum": 10
    },
    {
      "defaultValue": false,
      "name": "ForceMapreduce",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": " Specifies whether to partition the training data. The default value is 'false', which causes the ta.knn function to load all training data into memory and use only the row function. If you specify 'true', the ta.knn function partitions the training data and uses the map-and reduce function.",
      "description": "Specifies whether to partition the training data. The default value is 'false', which causes the KNN function to load all training data into memory and use only the row function. If you specify 'true', the KNN function partitions the training data and uses the map-and reduce function.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "force.mapreduce",
      "useInR": true,
      "rOrderNum": 9
    },
    {
      "permittedValues": [],
      "isOutputColumn": false,
      "matchLengthOfArgument": "",
      "allowPadding": true,
      "name": "CustomizedDistance",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the distance function. The parameter jar is the name of the JAR file that contains the distance metric class. The parameter distance_class is the distance metric class defined in the jar file. The ta.knn function installs the JAR file on the Aster Database server. The default distance function is Euclidean distance.",
      "description": "Specifies the distance function. The parameter jar is the name of the JAR file that contains the distance metric class. The parameter distance_class is the distance metric class defined in the jar file. The KNN function installs the JAR file on the Aster Database server. The default distance function is Euclidean distance.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "customized.distance",
      "useInR": true,
      "rOrderNum": 8
    },
    {
      "defaultValue": 0,
      "lowerBound": 0,
      "upperBound": Infinity,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "VotingWeight",
      "alternateNames": [],
      "isRequired": false,
      "rDescription": "Specifies the voting weight of the distance between a test object and the training objects. The voting_weight must be a nonnegative integer. The default value is 0. The function calculates distance-weighted voting, w, with this equation: w = 1/POWER(distance, voting_weight) Where distance is the distance between the test object and the training object.",
      "description": "Specifies the voting weight of the distance between a test object and the training objects. The voting_weight must be a nonnegative integer. The default value is 0. The function calculates distance-weighted voting, w, with this equation: w = 1/POWER(distance, voting_weight) Where distance is the distance between the test object and the training object.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "voting.weight",
      "useInR": true,
      "rOrderNum": 7
    }
  ]
}
