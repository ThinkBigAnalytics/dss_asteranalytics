{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "1",
  "json_content_version": "1",
  "function_name": "frequentpaths",
  "function_version": "2.1",
  "function_type": "driver",
  "short_description": "Compute frequent sequential patterns among a sequence table.",
  "long_description": "This function takes the input table and output the frequence sequential patterns according to a given threshold.",
  "argument_clauses": [
    {
      "isOutputColumn": false,
      "name": "Domain",
      "isRequired": false,
      "description": "The address of the Queen. The host parameter is the Aster Database Queenâ€™s IP saddress or hostname.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "Database",
      "isRequired": false,
      "description": "The name of the database where the input table is located.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "UserId",
      "isRequired": false,
      "description": "The Aster Database user name of the user running this function.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "Password",
      "isRequired": false,
      "description": "The Aster Database password of the user.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "SSLSettings",
      "isRequired": false,
      "description": "A string that includes all the SSL settings, except the password for the truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "SSLTrustStorePassword",
      "isRequired": false,
      "description": "The password for the SSL truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputTable": false,
      "name": "InputTable",
      "isRequired": true,
      "description": "The sequence table, where each row of record is one item belonging to a sequence.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "input.table",
      "useInR": true
    },
    {
      "isOutputTable": true,
      "name": "OutputTable",
      "isRequired": true,
      "description": "The name of the table in which the output patterns are stored.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "output.table",
      "useInR": true
    },
    {
      "targetTable": "InputTable",
      "checkDuplicate": true,
      "allowedTypes": [
        "numeric",
        "uuid",
        "bytea"
      ],
      "allowedTypeGroups": [
        "INTEGER",
        "STRING"
      ],
      "allowPadding": true,
      "name": "PartitionColumns",
      "alternateNames": [
        "PartitionColumn"
      ],
      "isRequired": true,
      "description": "A list of columns that provide the partition keys of a sequence. Input columns must contain integer SQL types. Input columns must contain string SQL types. Input columns can be the following SQL types: [numeric, uuid, bytea].",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "partition.columns",
      "useInR": true
    },
    {
      "targetTable": "InputTable",
      "checkDuplicate": true,
      "requiredLength": 1,
      "allowPadding": true,
      "name": "TimeColumn",
      "isRequired": false,
      "description": "The column in INPUTTABLE that determines the order of items in a sequence.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "time.column",
      "useInR": true
    },
    {
      "isOutputColumn": false,
      "allowPadding": true,
      "name": "PathFilters",
      "isRequired": false,
      "description": "A list of filters each of which comprises a set of constraints.",
      "datatype": "STRING",
      "allowsLists": true,
      "rName": "path.filters",
      "useInR": true
    },
    {
      "targetTable": "InputTable",
      "checkDuplicate": true,
      "allowPadding": true,
      "name": "GroupByColumns",
      "isRequired": false,
      "description": "If defined, the input table should be grouped by these columns, and the sequential patern mining will be done for each group spearately.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "group.by.columns",
      "useInR": true
    },
    {
      "isOutputTable": true,
      "name": "SeqPatternTable",
      "alternateNames": [
        "SequencePatternRelation"
      ],
      "isRequired": false,
      "description": "The name of table in which to store the sequence-pattern pairs.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "seq.pattern.table",
      "useInR": true
    },
    {
      "targetTable": "InputTable",
      "checkDuplicate": true,
      "requiredLength": 1,
      "allowPadding": true,
      "name": "ItemColumn",
      "isRequired": false,
      "description": "The column name of the items in INPUTTABLE",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "item.column",
      "useInR": true
    },
    {
      "isOutputColumn": false,
      "name": "ItemDefinition",
      "isRequired": false,
      "description": "The table name, index column name, definition column name, and item column name of the item definition table.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "item.definition",
      "useInR": true
    },
    {
      "targetTable": "InputTable",
      "checkDuplicate": true,
      "allowedTypeGroups": [
        "STRING"
      ],
      "requiredLength": 1,
      "allowPadding": true,
      "name": "PathColumn",
      "isRequired": false,
      "description": "A column where each row is a sequence string in the format of '[A, B, C, D]' where A, B, C, D are items separated by commas. Input columns must contain string SQL types.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "path.column",
      "useInR": true
    },
    {
      "lowerBound": 0,
      "lowerBoundType": "EXCLUSIVE",
      "allowNaN": false,
      "name": "MinSupport",
      "isRequired": true,
      "description": "A positive real number that determines the threshold T for deciding whether a sequential pattern is frequent or not. The input value must be greater than 0.0.",
      "datatype": "DOUBLE",
      "allowsLists": false,
      "rName": "min.support",
      "useInR": true
    },
    {
      "defaultValue": 2147483647,
      "lowerBound": 0,
      "lowerBoundType": "EXCLUSIVE",
      "allowNaN": false,
      "name": "MaxLength",
      "isRequired": false,
      "description": "The maximum length of the output sequential patterns. Defaultly there is no upper limitation on the length of patterns. The input value must be greater than 0. The default value is 2147483647.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.length",
      "useInR": true
    },
    {
      "defaultValue": 1,
      "lowerBound": 0,
      "lowerBoundType": "EXCLUSIVE",
      "allowNaN": false,
      "name": "MinLength",
      "isRequired": false,
      "description": "The minimum length of the outputted sequential patterns. The input value must be greater than 0. The default value is 1.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "min.length",
      "useInR": true
    },
    {
      "defaultValue": false,
      "name": "ClosedPattern",
      "isRequired": false,
      "description": "If true, only a closed pattern is outputted. The default value is false.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "closed.pattern",
      "useInR": true
    }
  ]
}