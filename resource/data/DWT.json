{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "1",
  "json_content_version": "1",
  "function_name": "dwt",
  "function_version": "1.3",
  "function_type": "driver",
  "short_description": "This function performs 1D forward wavelet transform.",
  "long_description": "This function is used for 1D DWT forward transformation. It can perform transformation on multiple sequences simultaneously.  For each sequence, this function generates corresponding coefficients in the outputtable  and the meta data in the metatable",
  "argument_clauses": [
    {
      "isOutputColumn": false,
      "name": "Domain",
      "isRequired": false,
      "description": "The address of the Queen. The host parameter is the Aster Database Queenâ€™s IP saddress or hostname.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "Database",
      "isRequired": false,
      "description": "The name of the database where the input table is located.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "UserId",
      "isRequired": false,
      "description": "The Aster Database user name of the user running this function.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "Password",
      "isRequired": false,
      "description": "The Aster Database password of the user.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "SSLSettings",
      "isRequired": false,
      "description": "A string that includes all the SSL settings, except the password for the truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "isOutputColumn": false,
      "name": "SSLTrustStorePassword",
      "isRequired": false,
      "description": "The password for the SSL truststore.",
      "datatype": "DRIVER",
      "allowsLists": false,
      "useInR": false
    },
    {
      "targetTable": "InputTable",
      "checkDuplicate": true,
      "requiredLength": 1,
      "allowPadding": true,
      "name": "SortColumn",
      "isRequired": true,
      "description": "The input table column name that represents the order of samples in a specific sequence.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": false,
      "rName": "sort.column",
      "useInR": true
    },
    {
      "isOutputColumn": false,
      "name": "Wavelet",
      "alternateNames": [
        "WaveletName"
      ],
      "isRequired": false,
      "description": "The name of predefined wavelet filter to be used.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "wavelet",
      "useInR": true
    },
    {
      "isOutputTable": false,
      "name": "WaveletFilterTable",
      "isRequired": false,
      "description": "The table that stores the coefficients of the filters.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "wavelet.filter.table",
      "useInR": true
    },
    {
      "lowerBound": 1,
      "upperBound": 1000,
      "lowerBoundType": "INCLUSIVE",
      "upperBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "Level",
      "isRequired": true,
      "description": "The level of wavelet transform to be performed. The input value must be no less than 1 and no greater than 1000.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "level",
      "useInR": true
    },
    {
      "permittedValues": [
        "sym",
        "zpd",
        "ppd"
      ],
      "defaultValue": "sym",
      "isOutputColumn": false,
      "name": "ExtensionMode",
      "isRequired": false,
      "description": "The method for handling the problem of border distortion. The permitted input values are [sym, zpd, ppd]. The default value is sym.",
      "datatype": "STRING",
      "allowsLists": false,
      "rName": "extension.mode",
      "useInR": true
    },
    {
      "isOutputTable": false,
      "name": "InputTable",
      "isRequired": true,
      "description": "The name of the input table or view.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "input.table",
      "useInR": true
    },
    {
      "isOutputTable": true,
      "name": "OutputTable",
      "isRequired": true,
      "description": "The name for the output table for the coefficients generated by the wavelet transform.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "output.table",
      "useInR": true
    },
    {
      "isOutputTable": true,
      "name": "MetaTable",
      "isRequired": true,
      "description": "The name for the output table for the meta information of the transformation.",
      "datatype": "TABLE_NAME",
      "allowsLists": false,
      "rName": "meta.table",
      "useInR": true
    },
    {
      "targetTable": "InputTable",
      "checkDuplicate": true,
      "allowPadding": true,
      "name": "InputColumns",
      "isRequired": true,
      "description": "The data columns of the input table to be transformed.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "input.columns",
      "useInR": true
    },
    {
      "targetTable": "InputTable",
      "checkDuplicate": true,
      "allowPadding": true,
      "name": "PartitionColumns",
      "isRequired": false,
      "description": "One or more columns identify the different sequences.",
      "datatype": "COLUMN_NAMES",
      "allowsLists": true,
      "rName": "partition.columns",
      "useInR": true
    }
  ]
}