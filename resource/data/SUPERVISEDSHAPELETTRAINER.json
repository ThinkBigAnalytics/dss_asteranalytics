{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "SupervisedShapeletTrainer",
  "function_version": "1.4",
  "function_type": "driver",
  "function_r_name": "aa.supervised.shapelet.train",
  "short_description": "Identify shapelet candidates for time series classification.",
  "long_description": "This function identifies shapelet candidates for time series classification.",
  "input_tables": [
    {
      "name": "InputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the table that contains the input data.",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "rName": "data",
      "alternateNames": [],
      "rDescription": "Specifies the name of the table that contains the input data.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    },
    {
      "name": "CategoryTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the table that contains the categories (classes) for the time series in input_data_table. The default value is input_data_table. If input_categories_table is different from input_data_table, the function ignores any time series that is not in both input_categories_table and input_data_table. If a time series is represented by multiple rows in input_categories_table, these rows must contain the same category; otherwise, the function might not select the correct category.",
      "isRequired": false,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 2,
      "rName": "category.table",
      "alternateNames": [],
      "rDescription": "Specifies the name of the table that contains the categories (classes) for the time series in input_data_table. The default value is input_data_table. If input_categories_table is different from input_data_table, the function ignores any time series that is not in both input_categories_table and input_data_table. If a time series is represented by multiple rows in input_categories_table, these rows must contain the same category; otherwise, the function might not select the correct category.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    }
  ],
  "output_tables": [
    {
      "name": "ModelTable",
      "allowsLists": false,
      "useInR": true,
      "isRequired": false,
      "datatype": "TABLE_NAME",
      "defaultValue": "shapelet_model",
      "rOrderNum": 100,
      "rName": "model.table",
      "alternateNames": [],
      "rDescription": "Specifies the name of the output model table that contains trained shapelets. The default output_model_table is \"shapelet_model\".",
      "isOutputTable": true,
      "description": "Specifies the name of the output model table that contains trained shapelets. The default output_model_table is \"shapelet_model\"."
    }
  ],
  "argument_clauses": [
    {
      "name": "IdColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "id.column",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 3,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the column in input_data_table and input_categories_table that contains the unique identity of a time series.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the column in input_data_table and input_categories_table that contains the unique identity of a time series."
    },
    {
      "name": "TimeColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "time.column",
      "allowedTypes": [
        "date"
      ],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 4,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the input_data_table column that contains the time axis of the data.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "NUMERIC",
        "TIME"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the input_data_table column that contains the time axis of the data."
    },
    {
      "name": "ValueColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "value.column",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable"
      ],
      "rOrderNum": 5,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the input_data_table column that contains the data points.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the input_data_table column that contains the data points."
    },
    {
      "name": "CategoryColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "category.column",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "CategoryTable"
      ],
      "rOrderNum": 6,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the input_categories_table column that contains the category (class) of the time series.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the input_categories_table column that contains the category (class) of the time series."
    },
    {
      "name": "SaxMinWindowSize",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "sax.min.window.size",
      "datatype": "INTEGER",
      "defaultValue": 10,
      "rOrderNum": 8,
      "allowsLists": false,
      "upperBound": 1000000,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the ta.sax2 argument sax.min.window.size , which specifies the size of the sliding window. The min_window_size defines the length (number of data points) of the shortest shapelet; the minimum span (time series length) used to distinguish two time series from each other. The min_window_size must be an integer in the range [1, 1000000]. The default value is 10. If the min_window_size is greater than the length of the shortest time series in input data set (d), then its value becomes d. If min_window_size is smaller than symbols_per_window, then its value becomes symbols_per_window. ",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the SAX2 argument WindowSize , which specifies the size of the sliding window. The min_window_size defines the length (number of data points) of the shortest shapelet; the minimum span (time series length) used to distinguish two time series from each other. The min_window_size must be an integer in the range [1, 1000000]. The default value is 10. If the min_window_size is greater than the length of the shortest time series in input data set (d), then its value becomes d. If min_window_size is smaller than symbols_per_window, then its value becomes symbols_per_window. "
    },
    {
      "name": "SaxMaxWindowSize",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "sax.max.window.size",
      "datatype": "INTEGER",
      "defaultValue": 70,
      "rOrderNum": 9,
      "allowsLists": false,
      "upperBound": 1000000,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the ta.sax2 argument sax.max.window.size, which specifies the size of the sliding window. The max_window_size defines the length of the longest shapelet; the maximum span used to distinguish two time series from each other. The max_window_size must be an integer in the range [1, 1000000] that is greater than or equal to min_window_size. The default value is 70. If the max_window_size is greater than the length of the shortest time series in input data set (d), then its value becomes d. A greater difference between min_window_size and max_window_size increases the probability of identifying better shapelets at the cost of higher execution time. The function uses this formula to compute the number of sliding windows, n: n = ((max_window_size - min_window_size) / symbols_per_window)+1 The maximum value of n is 20. ",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the SAX2 argument WindowSize , which specifies the size of the sliding window. The max_window_size defines the length of the longest shapelet; the maximum span used to distinguish two time series from each other. The max_window_size must be an integer in the range [1, 1000000] that is greater than or equal to min_window_size. The default value is 70. If the max_window_size is greater than the length of the shortest time series in input data set (d), then its value becomes d. A greater difference between min_window_size and max_window_size increases the probability of identifying better shapelets at the cost of higher execution time. The function uses this formula to compute the number of sliding windows, n: n = ((max_window_size - min_window_size) / symbols_per_window)+1 The maximum value of n is 20. "
    },
    {
      "name": "SaxOutputFrequency",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "sax.output.frequency",
      "datatype": "INTEGER",
      "defaultValue": 10,
      "rOrderNum": 10,
      "allowsLists": false,
      "upperBound": 1000,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies ta.sax2 argument sax.output.frequency, which specifies the number of data points to skip between successive sliding windows. The gap_between_windows must be an integer in the range [1, 1000]. The default value is 10. A smaller value increases accuracy (the chance of distinguishing time series from each other) at the cost of higher execution time.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies SAX2 argument OutputFrequency, which specifies the number of data points to skip between successive sliding windows. The gap_between_windows must be an integer in the range [1, 1000]. The default value is 10. A smaller value increases accuracy (the chance of distinguishing time series from each other) at the cost of higher execution time."
    },
    {
      "name": "SaxSymbolsPerWindow",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "sax.symbols.perwindow",
      "datatype": "INTEGER",
      "defaultValue": 10,
      "rOrderNum": 7,
      "allowsLists": false,
      "upperBound": 1000000,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the ta.sax2 argument sax.symbols.perwindow, which specifies the number of ta.sax code symbols to generate from a window. The symbols_per_window must an INTEGER in the range [1, 1000000]. The default value is 10. If the symbols_per_window is greater than the length of the shortest time series in input data set (d), then its value becomes d.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the SAX2 argument SymbolsPerWindow, which specifies the number of SAX code symbols to generate from a window. The symbols_per_window must an INTEGER in the range [1, 1000000]. The default value is 10. If the symbols_per_window is greater than the length of the shortest time series in input data set (d), then its value becomes d."
    },
    {
      "name": "RandomProjections",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "random.projections",
      "datatype": "INTEGER",
      "defaultValue": 10,
      "rOrderNum": 12,
      "allowsLists": false,
      "upperBound": 40,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the number of iterations required for random masking of ta.sax words during shapelet training. The projections must be an INTEGER in the range [1, 40]. The default value is 10. Specifying a greater projections for a longer input time series increases the probability of identifying better shapelets at the cost of higher execution time.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the number of iterations required for random masking of SAX words during shapelet training. The projections must be an INTEGER in the range [1, 40]. The default value is 10. Specifying a greater projections for a longer input time series increases the probability of identifying better shapelets at the cost of higher execution time."
    },
    {
      "name": "ShapeletCount",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "shapelet.count",
      "datatype": "INTEGER",
      "defaultValue": 20,
      "rOrderNum": 13,
      "allowsLists": false,
      "upperBound": 100000,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the maximum number of shapelets in the output model table. The num_shapelets must be an INTEGER in the range [1, 100000]. The default value is 20.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the maximum number of shapelets in the output model table. The num_shapelets must be an INTEGER in the range [1, 100000]. The default value is 20."
    },
    {
      "name": "TimeInterval",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "time.interval",
      "datatype": "INTEGER",
      "defaultValue": 10,
      "rOrderNum": 14,
      "allowsLists": false,
      "upperBound": 1000000,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the number of data points in a time series to skip between consecutive time series windows when calculating the distance of a shapelet from a time series. The function builds a shapelet classification tree based on the distance of a shapelet from the time series data. Because a shapelet is typically much smaller than a complete time series, the function calculates the distance of a shapelet from a time series by sliding the shapelet across time series windows of shapelet length, calculating the distance between the shapelet and each window, and then selecting the smallest distance. The num_data_points is the number of data points to skip when sliding from one time series window to the next. The num_data_points must be an INTEGER in the range [1, 1000000]. The value 1 gives optimal results at the cost of higher execution time. The default value is 10. ",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the number of data points in a time series to skip between consecutive time series windows when calculating the distance of a shapelet from a time series. The function builds a shapelet classification tree based on the distance of a shapelet from the time series data. Because a shapelet is typically much smaller than a complete time series, the function calculates the distance of a shapelet from a time series by sliding the shapelet across time series windows of shapelet length, calculating the distance between the shapelet and each window, and then selecting the smallest distance. The num_data_points is the number of data points to skip when sliding from one time series window to the next. The num_data_points must be an INTEGER in the range [1, 1000000]. The value 1 gives optimal results at the cost of higher execution time. The default value is 10. "
    },
    {
      "name": "Seed",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "seed",
      "datatype": "INTEGER",
      "defaultValue": 23,
      "rOrderNum": 15,
      "allowsLists": false,
      "upperBound": 100000,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the seed value for the function to use to generate random numbers, which it uses internally. The seed must be an INTEGER in the range [1, 100000]. The default value is 23. ",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the seed value for the function to use to generate random numbers, which it uses internally. The seed must be an INTEGER in the range [1, 100000]. The default value is 23. "
    }
  ]
}