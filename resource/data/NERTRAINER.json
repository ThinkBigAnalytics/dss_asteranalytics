{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "NERTrainer",
  "function_version": "1.3",
  "function_type": "driver",
  "function_r_name": "aa.ner.train",
  "short_description": "SQL/MR function to train a ner model.",
  "long_description": "SQL/MR function to train a ner model.",
  "input_tables": [
    {
      "isOrdered": false,
      "useInR": true,
      "name": "input",
      "rName": "data",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "allowsLists": false,
      "partitionByOne": true,
      "rDescription": "The relation that contains the training data.",
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "alternateNames": [],
      "description": "The relation that contains the training data."
    }
  ],
  "argument_clauses": [
    {
      "name": "TextColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "text.coloumn",
      "allowedTypes": [],
      "datatype": "COLUMNS",
      "targetTable": [
        "input"
      ],
      "rOrderNum": 2,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the input table column that contains the text to analyze.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the input table column that contains the text to analyze."
    },
    {
      "name": "ModelFile",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 5,
      "rName": "model.file",
      "isRequired": true,
      "rDescription": "Specifies the name of the model file that the function generates and installs in Aster Database.",
      "alternateNames": [],
      "permittedValues": [],
      "description": "Specifies the name of the model file that the function generates and installs in Aster Database."
    },
    {
      "name": "FeatureTemplate",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 4,
      "rName": "feature.template",
      "isRequired": true,
      "rDescription": "Specifies the name of the file that specifies how to generate features when training the model. You must install this feature template file in Aster Database under the user search path before calling the function. For more information about template_file, refer to \u201cFeature Template\u201d",
      "alternateNames": [],
      "permittedValues": [],
      "description": "Specifies the name of the file that specifies how to generate features when training the model. You must install this feature template file in Aster Database under the user search path before calling the function. For more information about template_file, refer to \u201cFeature Template\u201d"
    },
    {
      "name": "Language",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "en",
      "rOrderNum": 6,
      "rName": "language",
      "isRequired": false,
      "rDescription": "Specifies the language of the input text: \u2022 en (English, the default) \u2022 zh_CN (Simplified Chinese) \u2022 zh_TW (Traditional Chinese)",
      "alternateNames": [],
      "permittedValues": [
        "en",
        "zh_CN",
        "zh_TW"
      ],
      "description": "Specifies the language of the input text: \u2022 en (English, the default) \u2022 zh_CN (Simplified Chinese) \u2022 zh_TW (Traditional Chinese)"
    },
    {
      "name": "Eta",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": -Infinity,
      "useInR": true,
      "rName": "eta",
      "datatype": "DOUBLE",
      "defaultValue": 0.0001,
      "rOrderNum": 8,
      "allowsLists": false,
      "upperBound": Infinity,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the tolerance of the termination criterion. Defines the differences of the values of the loss function between two sequential epochs. The default value is 0.0001. When training a model, the function performs n-times iterations. At the end of each epoch, the function calculates the loss or cost function on the training samples. If the loss function value change is very small between two sequential epochs, the function considers the training process to have converged. The function defines eta as: Eta=(f(n)-f(n-1))/f(n-1), where f(n) is the loss function value of the nth epoch.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the tolerance of the termination criterion. Defines the differences of the values of the loss function between two sequential epochs. The default value is 0.0001. When training a model, the function performs n-times iterations. At the end of each epoch, the function calculates the loss or cost function on the training samples. If the loss function value change is very small between two sequential epochs, the function considers the training process to have converged. The function defines Eta as: Eta=(f(n)-f(n-1))/f(n-1), where f(n) is the loss function value of the nth epoch."
    },
    {
      "name": "MaxIterNum",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 0,
      "useInR": true,
      "rName": "max.iter.num",
      "datatype": "INTEGER",
      "defaultValue": 1000,
      "rOrderNum": 7,
      "allowsLists": false,
      "upperBound": 2147483647,
      "lowerBoundType": "EXCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the maximum number of iterations. The default value is '1000'",
      "alternateNames": [
        "MaxIteration"
      ],
      "allowNaN": false,
      "description": "Specifies the maximum number of iterations. The default value is '1000'"
    },
    {
      "name": "MinOccurNum",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": -2147483648,
      "useInR": true,
      "rName": "min.occur.num",
      "datatype": "INTEGER",
      "defaultValue": 0,
      "rOrderNum": 9,
      "allowsLists": false,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the minimum number times that a feature must occur in the input text before the function uses the feature to construct the model. The default value is 0.",
      "alternateNames": [
        "minFeatureOccurNum"
      ],
      "allowNaN": false,
      "description": "Specifies the minimum number times that a feature must occur in the input text before the function uses the feature to construct the model. The default value is 0."
    },
    {
      "name": "ExtractorJar",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 3,
      "rName": "extractor.jar",
      "isRequired": false,
      "rDescription": "Specifies the name of the JAR file that contains the Java classes that extract features. You must install this JAR file in Aster Database under the user search path before calling the function. Note: The name jar_file is case-sensitive.",
      "alternateNames": [],
      "permittedValues": [],
      "description": "Specifies the name of the JAR file that contains the Java classes that extract features. You must install this JAR file in Aster Database under the user search path before calling the function. Note: The name jar_file is case-sensitive."
    }
  ]
}