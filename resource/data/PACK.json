{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "Pack",
  "function_version": "1.3",
  "function_type": "non-driver",
  "function_r_name": "aa.pack",
  "short_description": "Packs data across several columns into a single data column.",
  "long_description": "Reverse of the unpack function.  Packs data across several columns into a single data column.",
  "input_tables": [
    {
      "isOrdered": false,
      "useInR": true,
      "name": "input",
      "rName": "data",
      "isRequired": true,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "allowsLists": false,
      "partitionByOne": false,
      "rDescription": "The table containing the input attributes.",
      "requiredInputKind": [
        "PartitionByAny"
      ],
      "alternateNames": [],
      "description": "The table containing the input attributes."
    }
  ],
  "argument_clauses": [
    {
      "name": "InputColumns",
      "allowsLists": true,
      "useInR": true,
      "rName": "input.columns",
      "allowedTypes": [],
      "datatype": "COLUMNS",
      "targetTable": [
        "input"
      ],
      "rOrderNum": 2,
      "checkDuplicate": false,
      "isRequired": false,
      "rDescription": "Specifies the names of the input columns to pack into a single output column. These names become the column names of the virtual columns. By default, all input table columns are packed into a single output column. If you specify this argument, but do not specify all input table columns, the function copies the unspecified input tablecolumns to the output table.",
      "alternateNames": [
        "ColumnNames"
      ],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the names of the input columns to pack into a single output column. These names become the column names of the virtual columns. By default, all input table columns are packed into a single output column. If you specify this argument, but do not specify all input table columns, the function copies the unspecified input tablecolumns to the output table."
    },
    {
      "name": "OutputColumn",
      "allowsLists": false,
      "isOutputColumn": true,
      "useInR": true,
      "datatype": "STRING",
      "rOrderNum": 3,
      "rName": "output.column",
      "isRequired": true,
      "rDescription": " Specifies the name to give to the packed output column.",
      "alternateNames": [
        "PackedColumnName"
      ],
      "permittedValues": [],
      "description": " Specifies the name to give to the packed output column."
    },
    {
      "name": "Delimiter",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": ",",
      "rOrderNum": 4,
      "rName": "delimiter",
      "isRequired": false,
      "rDescription": "Specifies the delimiter (a string) that separates the virtual columns in the packed data. The default delimiter is comma (,).",
      "alternateNames": [
        "ColumnDelimiter"
      ],
      "permittedValues": [],
      "description": "Specifies the delimiter (a string) that separates the virtual columns in the packed data. The default delimiter is comma (,)."
    },
    {
      "name": "IncludeColumnName",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": true,
      "rOrderNum": 5,
      "rName": " include.column.name",
      "isRequired": false,
      "rDescription": " Specifies whether to label each virtual column value with its column name (making the virtual column 'input_column:value'). The default value is 'true'.",
      "alternateNames": [],
      "description": " Specifies whether to label each virtual column value with its column name (making the virtual column 'input_column:value'). The default value is 'true'."
    }
  ]
}