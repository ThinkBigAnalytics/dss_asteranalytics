{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "1",
  "json_content_version": "1",
  "function_name": "basket_generator",
  "function_version": "1.3",
  "function_type": "non-driver",
  "short_description": "This function generates combinations of basket items  ",
  "long_description": "This function is a part of association analysis used for mining interesting baskets and also for trends over time and compare attributes",
  "input_tables": [
    {
      "requiredInputKind": [
        "PartitionByKey"
      ],
      "isOrdered": false,
      "partitionByOne": false,
      "isRequired": true,
      "description": "Input table that contains basket information.",
      "datatype": "TABLE_ALIAS",
      "allowsLists": false,
      "useInR": true
    }
  ],
  "argument_clauses": [
    {
      "checkDuplicate": true,
      "allowPadding": true,
      "name": "BasketItem",
      "alternateNames": [
        "Basket_Item"
      ],
      "isRequired": true,
      "description": "Names of the input columns that contain the items to be collected into baskets.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "basket.item",
      "useInR": true
    },
    {
      "defaultValue": 2,
      "lowerBound": 2,
      "lowerBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "BasketSize",
      "alternateNames": [
        "Basket_Size"
      ],
      "isRequired": false,
      "description": "Integer number of items to be included in a basket. The input value must be no less than 2. The default value is 2.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "basket.size",
      "useInR": true
    },
    {
      "checkDuplicate": true,
      "allowPadding": true,
      "name": "Accumulate",
      "isRequired": false,
      "description": "Names of input columns that will be returned as-is in the output.",
      "datatype": "COLUMNS",
      "allowsLists": true,
      "rName": "accumulate",
      "useInR": true
    },
    {
      "defaultValue": 100,
      "lowerBound": 0,
      "lowerBoundType": "INCLUSIVE",
      "allowNaN": false,
      "name": "MaxItems",
      "alternateNames": [
        "Item_Set_Max",
		"ItemSetMax"
      ],
      "isRequired": false,
      "description": "The maximum number of items to be considered in a partition. The input value must be no less than 0. The default value is 100.",
      "datatype": "INTEGER",
      "allowsLists": false,
      "rName": "max.items",
      "useInR": true
    },
    {
      "defaultValue": true,
      "name": "Combination",
      "alternateNames": [
        "Combinations"
      ],
      "isRequired": false,
      "description": "If 'true' the function returns a basket for each unique combination of items. The default value is true.",
      "datatype": "BOOLEAN",
      "allowsLists": false,
      "rName": "combination",
      "useInR": true
    }
  ]
}