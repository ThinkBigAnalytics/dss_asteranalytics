{
  "json_schema_major_version": "1",
  "json_schema_minor_version": "2",
  "json_content_version": "1",
  "function_name": "Single_Tree_Drive",
  "function_version": "1.6",
  "function_type": "driver",
  "function_r_name": "aa.single.tree.drive",
  "short_description": "This is a driver function to build a single tree model",
  "long_description": "The Single_Tree_Drive function takes the entire data set as training input and builds a single decision tree from it",
  "input_tables": [
    {
      "name": "AttributeTableName",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the table that contains the attribute names and the values. *Required if you omit InputTable.",
      "isRequired": false,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 5,
      "rName": "attribute.table",
      "alternateNames": [],
      "rDescription": "Specifies the name of the table that contains the attribute names and the values. *Required if you omit data.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    },
    {
      "name": "InputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the table that contains the input data set. *Required if you omit AttributeTableName and ResponseTableName.",
      "isRequired": false,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 1,
      "rName": "data",
      "alternateNames": [],
      "rDescription": "Specifies the name of the table that contains the input data set. *Required if you omit attribute.table and response.table.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    },
    {
      "name": "CategoricalAttributeTableName",
      "allowsLists": false,
      "useInR": true,
      "description": "The name of the input table containing the categorical attributes.",
      "isRequired": false,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 8,
      "rName": "categorical.attribute.table",
      "alternateNames": [],
      "rDescription": "The name of the input table containing the categorical attributes.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    },
    {
      "name": "ResponseTableName",
      "allowsLists": false,
      "useInR": true,
      "description": " Specifies the name of the table that contains the response values. *Required if you omit InputTable.",
      "isRequired": false,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 6,
      "rName": "response.table",
      "alternateNames": [],
      "rDescription": "Specifies the name of the table that contains the response values. *Required if you omit data.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    },
    {
      "name": "SplitsTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name of the input table that contains the user-specified splits. By default, the function creates new splits.",
      "isRequired": false,
      "datatype": "TABLE_ALIAS",
      "rOrderNum": 9,
      "rName": "splits.table",
      "alternateNames": [
        "SplitsTableName"
      ],
      "rDescription": "Specifies the name of the input table that contains the user-specified splits. By default, the function creates new splits.",
      "requiredInputKind": [],
      "isOrdered": false,
      "partitionByOne": false
    }
  ],
  "output_tables": [
    {
      "name": "OutputTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name for the output table that is to contain the final decision tree (the model table). The name must not exceed 64 characters.",
      "isRequired": true,
      "datatype": "TABLE_NAME",
      "rOrderNum": 100,
      "rName": "model.table",
      "alternateNames": [
        "OutputTableName"
      ],
      "rDescription": "Specifies the name for the model.table that is to contain the final decision tree (the model table). The name must not exceed 64 characters.",
      "isOutputTable": true
    },
    {
      "name": "IntermediateSplitsTable",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name for the intermediate splits table, if it is to be saved. By default, the function does not save the intermediate splits table.",
      "isRequired": false,
      "datatype": "TABLE_NAME",
      "rOrderNum": 101,
      "rName": "intermediate.splits.table",
      "alternateNames": [
        "MaterializeSplitsTableWithName"
      ],
      "rDescription": "Specifies the name for the intermediate splits table, if it is to be saved. By default, the function does not save the intermediate splits table.",
      "isOutputTable": true
    },
    {
      "name": "SaveFinalResponseTableTo",
      "allowsLists": false,
      "useInR": true,
      "description": "Specifies the name for the output table that is to contain the final PID and response pair from the response table and the node_id from the final single drive tree.",
      "isRequired": false,
      "datatype": "TABLE_NAME",
      "rOrderNum": 102,
      "rName": "final.response.tableto",
      "alternateNames": [],
      "rDescription": "Specifies the name for the output table that is to contain the final PID and response pair from the response table and the node_id from the final single drive tree.",
      "isOutputTable": true
    }
  ],
  "argument_clauses": [
    {
      "name": "AttributeNameColumns",
      "allowsLists": true,
      "useInR": true,
      "rName": "attribute.name.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable",
        "AttributeTableName"
      ],
      "rOrderNum": 2,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the names of the attribute table columns that define the attribute.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the names of the attribute table columns that define the attribute."
    },
    {
      "name": "IdColumns",
      "allowsLists": true,
      "useInR": true,
      "rName": "id.columns",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable",
        "AttributeTableName"
      ],
      "rOrderNum": 4,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the names of the columns in the response and attribute tables that specify the ID of the instance.",
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the names of the columns in the response and attribute tables that specify the ID of the instance."
    },
    {
      "name": "AttributeValueColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "attribute.value.column",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable",
        "AttributeTableName"
      ],
      "rOrderNum": 3,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": " Specifies the names of the attribute table columns that define the value.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": " Specifies the names of the attribute table columns that define the value."
    },
    {
      "name": "ResponseColumn",
      "allowsLists": false,
      "rOrderNum": 7,
      "useInR": true,
      "rName": "response.column",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable",
        "ResponseTableName"
      ],
      "rFormulaUsage": true,
      "checkDuplicate": true,
      "isRequired": true,
      "rDescription": "Specifies the name of the response table column that contains the response variable.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the response table column that contains the response variable."
    },
    {
      "name": "SplitsValueColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "split.value",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "SplitsTable"
      ],
      "rOrderNum": 10,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "If you specify splits.table, this argument specifies the name of the column that contains the split value. If approx.splits is 'true', then the default value is splits_valcol; if not, then the default value is the attribute.value.column argument, node_column.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "ALL"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "If you specify SplitsTableName, this argument specifies the name of the column that contains the split value. If UseApproximateSplits is 'true', then the default value is splits_valcol; if not, then the default value is then AttributeValueColumn argument, node_column."
    },
    {
      "name": "WeightColumn",
      "allowsLists": false,
      "useInR": true,
      "rName": "weight.column",
      "allowedTypes": [],
      "datatype": "COLUMN_NAMES",
      "targetTable": [
        "InputTable",
        "ResponseTableName"
      ],
      "rOrderNum": 17,
      "checkDuplicate": true,
      "isRequired": false,
      "rDescription": "Specifies the name of the response table column that contains the weights of the attribute values.",
      "requiredLength": 1,
      "alternateNames": [],
      "allowedTypeGroups": [
        "NUMERIC"
      ],
      "allowPadding": true,
      "matchLengthOfArgument": "",
      "description": "Specifies the name of the response table column that contains the weights of the attribute values."
    },
    {
      "name": "NumSplits",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "num.splits",
      "datatype": "INTEGER",
      "defaultValue": 10,
      "rOrderNum": 11,
      "allowsLists": false,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies the number of splits to consider for each variable. The default value is 10. The function does not consider all possible splits for all attributes.",
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies the number of splits to consider for each variable. The default value is 10. The function does not consider all possible splits for all attributes."
    },
    {
      "name": "ApproxSplits",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": true,
      "rOrderNum": 12,
      "rName": "approx.splits",
      "isRequired": false,
      "rDescription": "Specifies whether to use approximate percentiles (true) or exact percentiles (false). The default value is true. Internally, the function uses percentile values as split values.",
      "alternateNames": [
        "UseApproximateSplits"
      ],
      "description": "Specifies whether to use approximate percentiles (true) or exact percentiles (false). The default value is true. Internally, the function uses percentile values as split values."
    },
    {
      "name": "MinNodeSize",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": -2147483648,
      "useInR": true,
      "rName": "nodesize",
      "datatype": "INTEGER",
      "defaultValue": 100,
      "rOrderNum": 14,
      "allowsLists": false,
      "upperBound": 2147483647,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": " Specifies the decision tree stopping criterion and the minimum size of any particular node within each decision tree. The default value is 100.",
      "alternateNames": [],
      "allowNaN": false,
      "description": " Specifies the decision tree stopping criterion and the minimum size of any particular node within each decision tree. The default value is 100."
    },
    {
      "name": "MaxDepth",
      "upperBoundType": "INCLUSIVE",
      "lowerBound": 1,
      "useInR": true,
      "rName": "max.depth",
      "datatype": "INTEGER",
      "defaultValue": 5,
      "rOrderNum": 15,
      "allowsLists": false,
      "upperBound": 60,
      "lowerBoundType": "INCLUSIVE",
      "isRequired": false,
      "rDescription": "Specifies a decision tree stopping criterion. If the tree reaches a depth past this value, the algorithm stops looking for splits. Decision trees can grow up to (2(max_depth+1) - 1) nodes. This stopping criteria has the greatest effect on function performance. The maximum value is 60. The default value is 5.",
      "rDefaultValue": 30,
      "alternateNames": [],
      "allowNaN": false,
      "description": "Specifies a decision tree stopping criterion. If the tree reaches a depth past this value, the algorithm stops looking for splits. Decision trees can grow up to (2(max_depth+1) - 1) nodes. This stopping criteria has the greatest effect on function performance. The maximum value is 60. The default value is 5."
    },
    {
      "name": "SplitMeasure",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "gini",
      "rOrderNum": 18,
      "rName": "split.measure",
      "isRequired": false,
      "rDescription": "Specifies the impurity measurement to use while constructing the decision tree. The default value is 'gini'. If the tree is weighted, this value cannot be 'chisquare'.",
      "alternateNames": [
        "ImpurityMeasurement"
      ],
      "permittedValues": [
        "GINI",
        "ENTROPY",
        "CHISQUARE"
      ],
      "description": "Specifies the impurity measurement to use while constructing the decision tree. The default value is 'gini'. If the tree is weighted, this value cannot be 'chisquare'."
    },
    {
      "name": "Weighted",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": false,
      "rOrderNum": 16,
      "rName": "weighted",
      "isRequired": false,
      "rDescription": " Specifies whether to build a weighted decision tree. The default value is 'false'. If you specify 'true', then you must also specify the weight.column argument.",
      "alternateNames": [],
      "description": "Specifies whether to build a weighted decision tree. The default value is 'false'. If you specify 'true', then you must also specify the WeightColumn argument."
    },
    {
      "name": "OutputResponseProbDist",
      "allowsLists": false,
      "useInR": true,
      "datatype": "BOOLEAN",
      "defaultValue": false,
      "rOrderNum": 19,
      "rName": "output.response.probdist",
      "isRequired": false,
      "rDescription": "Switch to enable/disable output of probability distribution for output labels.",
      "alternateNames": [],
      "description": "Switch to enable/disable output of probability distribution for output labels."
    },
    {
      "name": "ResponseProbDistType",
      "allowsLists": false,
      "isOutputColumn": false,
      "useInR": true,
      "datatype": "STRING",
      "defaultValue": "Laplace",
      "rOrderNum": 20,
      "rName": "response.probdist.type",
      "isRequired": false,
      "rDescription": "Specifies the type of algorithm to use to generate output probability distribution for output labels. Uses one of Laplace, Frequency or RawCounts to generate Probability Estimation Trees (PET) based distributions.",
      "alternateNames": [],
      "permittedValues": [
        "Laplace",
        "Frequency",
        "RawCount"
      ],
      "description": "Specifies the type of algorithm to use to generate output probability distribution for output labels. Uses one of Laplace, Frequency or RawCounts to generate Probability Estimation Trees (PET) based distributions."
    }
  ]
}