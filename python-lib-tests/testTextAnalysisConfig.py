# -*- coding: utf-8 -*-
'''
Copyright Â© 2018 by Teradata.
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
associated documentation files (the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge, publish, distribute,
sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all copies or
substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
'''

'''
Created on May 15, 2017

@author: dt186022
'''
textTokenizerConfig = {"orderByColumn":"",
                       "partitionAttributes":"",
                       "unaliased_inputs":{"count":1,"values":["text_chunked"],"desc":{}},
                       "name":"TEXTTOKENIZER",
                       "partitionInputKind":["PartitionByAny","Dimension"],
                       "hasInputTable":True,
                       "asterarguments":[
                           {"name":"schema", "value":"", "label":"Schema"},
                           {"name":"outputType","value":"","label":"Output Table Type"},
                           {"name":"hashKey","value":"","label":"Hash Key Column"}],
                       "required_input":[
                           {"kind":"Dimension","name":"dict","isOrdered":False,"value":"","orderByColumn":"","isRequired":False,"partitionAttributes":""}],
                       "isOrdered":False,
                       "arguments":[
                           {"datatype":"STRING",
                            "isRequired":False,
                            "allowsLists":False,
                            "name":"LANGUAGE",
                            "value":""},
                           {"datatype":"COLUMNS",
                            "isRequired":True,
                            "allowsLists":False,
                            "name":"TEXTCOLUMN",
                            "value":"chunk"},
                           {"datatype":"STRING",
                            "isRequired":False,
                            "allowsLists":False,
                            "name":"OUTPUTDELIMITER",
                            "value":""},
                           {"datatype":"BOOLEAN",
                            "isRequired":False,
                            "allowsLists":False,
                            "name":"OUTPUTBYWORD",
                            "value":""},
                           {"datatype":"STRING",
                            "isRequired":False,
                            "allowsLists":False,
                            "name":"USERDICTIONARYFILE",
                            "value":""},
                           {"datatype":"STRING",
                            "isRequired":False,
                            "allowsLists":False,
                            "name":"MODEL",
                            "value":""},
                           {"datatype":"COLUMNS",
                            "isRequired":False,
                            "allowsLists":True,
                            "name":"ACCUMULATE",
                            "value":""}
                        ]}

nertrainerConfig = {'isOrdered': False,
                    'name':'NERTRAINER',
                    'partitionInputKind': ['PartitionByKey'],
                    'orderByColumn': '',
                    'partitionAttributes': ['id'],
                    'unaliased_inputs': {'count': 1.0, 'values': ['ner_sports_train'], 'desc': {}},
                    'arguments': [
                        {'datatype': 'DRIVER', 'isRequired': False, 'allowsLists': False, 'name': 'DOMAIN', 'value': ''},
                        {'datatype': 'DRIVER', 'isRequired': False, 'allowsLists': False, 'name': 'DATABASE', 'value': ''},
                        {'datatype': 'DRIVER', 'isRequired': False, 'allowsLists': False, 'name': 'USERID', 'value': ''},
                        {'datatype': 'DRIVER', 'isRequired': False, 'allowsLists': False, 'name': 'PASSWORD', 'value': ''},
                        {'datatype': 'DRIVER', 'isRequired': False, 'allowsLists': False, 'name': 'SSLSETTINGS', 'value': ''},
                        {'datatype': 'DRIVER', 'isRequired': False, 'allowsLists': False, 'name': 'SSLTRUSTSTOREPASSWORD', 'value': ''},
                        {'datatype': 'COLUMNS', 'isRequired': True, 'allowsLists': False, 'name': 'TEXTCOLUMN', 'value': 'content'},
                        {'datatype': 'STRING', 'isRequired': False, 'allowsLists': False, 'name': 'LANGUAGE', 'value': ''},
                        {'datatype': 'STRING', 'isRequired': True, 'allowsLists': False, 'name': 'MODELFILE', 'value': 'ner_model.bin'},
                        {'datatype': 'DOUBLE', 'isRequired': False, 'allowsLists': False, 'name': 'ETA', 'value': ''},
                        {'datatype': 'INTEGER', 'isRequired': False, 'allowsLists': False, 'name': 'MAXITERATION', 'value': 1000.0},
                        {'datatype': 'INTEGER', 'isRequired': False, 'allowsLists': False, 'name': 'MINFEATUREOCCURNUM', 'value': ''},
                        {'datatype': 'STRING', 'isRequired': True, 'allowsLists': False, 'name': 'FEATURETEMPLATE', 'value': 'template_1.txt'},
                        {'datatype': 'STRING', 'isRequired': False, 'allowsLists': False, 'name': 'EXTRACTORJAR', 'value': ''}],
                    'required_input': [],
                    'hasInputTable': True,
                    'asterarguments': [
                        {'name': 'schema', 'value': '', 'label': 'Schema'}, {'name': 'outputType', 'value': '', 'label': 'Output Table Type'}, {'name': 'hashKey', 'value': '', 'label': 'Hash Key Column'}
                        ]}

nerConfig = {'isOrdered': False,
             'name': 'NER',
             'partitionInputKind': ['PartitionByAny'],
             'orderByColumn': '',
             'partitionAttributes': '',
             'unaliased_inputs': {'count': 1.0,
                                  'values': ['ner_sports_test'],
                                  'desc': {}},
             'arguments': [{'datatype': 'COLUMNS', 'isRequired': True, 'allowsLists': False, 'name': 'TEXTCOLUMN', 'value': 'content'},
                           {'datatype': 'STRING', 'isRequired': False, 'allowsLists': False, 'name': 'LANGUAGE', 'value': ''},
                           {'datatype': 'STRING', 'isRequired': False, 'allowsLists': True, 'name': 'MODELS', 'value': 'ner_model.bin'},
                           {'datatype': 'COLUMNS', 'isRequired': False, 'allowsLists': True, 'name': 'ACCUMULATE', 'value': ['id']},
                           {'datatype': 'INTEGER', 'isRequired': False, 'allowsLists': False, 'name': 'SHOWCONTEXT', 'value': '2'}],
             'required_input': [{'kind': 'Dimension', 'name': 'rules', 'isOrdered': False, 'value': 'rule_table', 'orderByColumn': '', 'isRequired': False, 'partitionAttributes': ''},
                                {'kind': 'Dimension', 'name': 'dict', 'isOrdered': False, 'value': '', 'orderByColumn': '', 'isRequired': False, 'partitionAttributes': ''}],
             'hasInputTable': True,
             'asterarguments': [{'name':'schema', 'value': '', 'label': 'Schema'},
                                {'name': 'outputType', 'value': '', 'label': 'Output Table Type'},
                                {'name': 'hashKey', 'value': '', 'label': 'Hash Key Column'}]}

nerEvaluatorConfig = {'isOrdered': False,
                      'name': 'NEREVALUATOR',
                      'partitionInputKind': ['PartitionByKey'],
                      'orderByColumn': '',
                      'partitionAttributes': ['id'],
                      'unaliased_inputs': {'count': 1.0, 'values': ['ner_sports_test'], 'desc': {}},
                      'arguments': [
                          {'datatype': 'COLUMNS',
                           'isRequired': True,
                           'allowsLists': False,
                           'name': 'TEXTCOLUMN',
                           'value': 'content'},
                          {'datatype': 'STRING', 'isRequired': False, 'allowsLists': False, 'name': 'LANGUAGE', 'value': ''},
                          {'datatype': 'STRING', 'isRequired': True, 'allowsLists': False, 'name': 'MODEL', 'value': 'ner_model.bin'}],
                      'required_input': [],
                      'hasInputTable': True,
                      'asterarguments': [{'name': 'schema', 'value': '', 'label': 'Schema'},
                                         {'name': 'outputType', 'value': '', 'label': 'Output Table Type'},
                                         {'name': 'hashKey', 'value': '', 'label': 'Hash Key Column'}]}

textParserConfig = {'isOrdered': False,
                    'name': 'TEXT_PARSER',
                    'partitionInputKind': ['PartitionByAny'],
                    'orderByColumn': '',
                    'partitionAttributes': '',
                    'unaliased_inputs': {'count': 1.0,
                                         'values': ['textparser_input'],
                                         'desc': {}},
                    'arguments': [{'datatype': 'COLUMNS',
                                   'isRequired': True,
                                   'allowsLists': False,
                                   'name': 'TEXT_COLUMN',
                                   'value': 'text_data'},
                                  {'datatype': 'BOOLEAN',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'CASE_INSENSITIVE',
                                   'value': True},
                                  {'datatype': 'BOOLEAN',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'STEMMING',
                                   'value': ''},
                                  {'datatype': 'BOOLEAN',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'OUTPUT_BY_WORD',
                                   'value': True},
                                  {'datatype': 'STRING',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'STEMMING_EXCEPTIONS',
                                   'value': ''},
                                  {'datatype': 'BOOLEAN',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'REMOVE_STOP_WORDS',
                                   'value': True},
                                  {'datatype': 'STRING',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'STOP_WORDS',
                                   'value': 'stopwords.txt'},
                                  {'datatype': 'STRING',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'DELIMITER',
                                   'value': ''},
                                  {'datatype': 'BOOLEAN',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'TOTAL',
                                   'value': ''},
                                  {'datatype': 'STRING',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'PUNCTUATION',
                                   'value': '\\[.,?\\!\\]'},
                                  {'datatype': 'BOOLEAN',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'LIST_POSITIONS',
                                   'value': True},
                                  {'datatype': 'STRING',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'TOKEN_COLUMN_NAME',
                                   'value': ''},
                                  {'datatype': 'STRING',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'FREQUENCY_COLUMN_NAME',
                                   'value': ''},
                                  {'datatype': 'STRING',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'TOTAL_COLUMN_NAME',
                                   'value': ''},
                                  {'datatype': 'STRING',
                                   'isRequired': False,
                                   'allowsLists': False,
                                   'name': 'POSITION_COLUMN_NAME',
                                   'value': ''},
                                  {'datatype': 'COLUMNS',
                                   'isRequired': False,
                                   'allowsLists': True,
                                   'name': 'ACCUMULATE',
                                   'value': ['doc_id', 'category']}],
                    'required_input': [],
                    'hasInputTable': True,
                    'asterarguments': [{'name': 'schema',
                                        'value': '',
                                        'label': 'Schema'},
                                       {'name': 'outputType',
                                        'value': '',
                                        'label': 'Output Table Type'},
                                       {'name': 'hashKey',
                                        'value': '',
                                        'label': 'Hash Key Column'}]}

tfidfConfig = {'isOrdered': False,
               'name': 'TF_IDF',
               'partitionInputKind': [],
               'orderByColumn': '',
               'partitionAttributes': '',
               'unaliased_inputs': {'count': 0.0,
                                    'values': [],
                                    'desc': {}},
               'arguments': '',
               'required_input': [{'kind': 'PartitionByKey',
                                   'name': 'tf',
                                   'isOrdered': False,
                                   'value': 'tf',
                                   'orderByColumn': '',
                                   'isRequired': True,
                                   'partitionAttributes': 'term'},
                                  {'kind': 'Dimension',
                                   'name': 'doccount',
                                   'isOrdered': True,
                                   'value': 'doccount_trigram',
                                   'orderByColumn': 'testColumn',
                                   'isRequired': False,
                                   'partitionAttributes': ''},
                                  {'kind': 'PartitionByKey',
                                   'name': 'docperterm',
                                   'isOrdered': False,
                                   'value': 'doccount_trigram',
                                   'orderByColumn': '',
                                   'isRequired': False,
                                   'partitionAttributes': 'tf'},
                                  {'kind': 'PartitionByKey',
                                   'name': 'idf',
                                   'isOrdered': False,
                                   'value': 'doccount_trigram',
                                   'orderByColumn': 'testColumn2',
                                   'isRequired': False,
                                   'partitionAttributes': 'doccount_trigram'},
                                  {'kind': 'PartitionByKey',
                                   'name': 'emptytesttable',
                                   'isOrdered': False,
                                   'value': '',
                                   'orderByColumn': 'testColumn2',
                                   'isRequired': False,
                                   'partitionAttributes': 'doccount_trigram'}],
               'hasInputTable': True,
               'asterarguments': [{'name': 'schema',
                                   'value': '', 'label': 'Schema'},
                                  {'name': 'outputType',
                                   'value': '',
                                   'label': 'Output Table Type'},
                                  {'name': 'hashKey', 'value': '', 'label': 'Hash Key Column'}]}
